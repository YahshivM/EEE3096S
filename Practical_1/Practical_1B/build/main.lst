ARM GAS  C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"main.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Src/main.c"
  18              		.section	.text.MX_GPIO_Init,"ax",%progbits
  19              		.align	1
  20              		.syntax unified
  21              		.code	16
  22              		.thumb_func
  24              	MX_GPIO_Init:
  25              	.LFB42:
   1:Core/Src/main.c **** /* USER CODE BEGIN Header */
   2:Core/Src/main.c **** /**
   3:Core/Src/main.c ****   ******************************************************************************
   4:Core/Src/main.c ****   * @file           : main.c
   5:Core/Src/main.c ****   * @brief          : Main program body
   6:Core/Src/main.c ****   ******************************************************************************
   7:Core/Src/main.c ****   * @attention
   8:Core/Src/main.c ****   *
   9:Core/Src/main.c ****   * Copyright (c) 2025 STMicroelectronics.
  10:Core/Src/main.c ****   * All rights reserved.
  11:Core/Src/main.c ****   *
  12:Core/Src/main.c ****   * This software is licensed under terms that can be found in the LICENSE file
  13:Core/Src/main.c ****   * in the root directory of this software component.
  14:Core/Src/main.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  15:Core/Src/main.c ****   *
  16:Core/Src/main.c ****   ******************************************************************************
  17:Core/Src/main.c ****   */
  18:Core/Src/main.c **** /* USER CODE END Header */
  19:Core/Src/main.c **** /* Includes ------------------------------------------------------------------*/
  20:Core/Src/main.c **** #include "main.h"
  21:Core/Src/main.c **** 
  22:Core/Src/main.c **** /* Private includes ----------------------------------------------------------*/
  23:Core/Src/main.c **** /* USER CODE BEGIN Includes */
  24:Core/Src/main.c **** #include <stdint.h>
  25:Core/Src/main.c **** #include "stm32f0xx.h"
  26:Core/Src/main.c **** /* USER CODE END Includes */
  27:Core/Src/main.c **** 
  28:Core/Src/main.c **** /* Private typedef -----------------------------------------------------------*/
  29:Core/Src/main.c **** /* USER CODE BEGIN PTD */
  30:Core/Src/main.c **** #define MAX_ITER 100
  31:Core/Src/main.c **** /* USER CODE END PTD */
  32:Core/Src/main.c **** 
  33:Core/Src/main.c **** /* Private define ------------------------------------------------------------*/
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s 			page 2


  34:Core/Src/main.c **** /* USER CODE BEGIN PD */
  35:Core/Src/main.c **** 
  36:Core/Src/main.c **** /* USER CODE END PD */
  37:Core/Src/main.c **** 
  38:Core/Src/main.c **** /* Private macro -------------------------------------------------------------*/
  39:Core/Src/main.c **** /* USER CODE BEGIN PM */
  40:Core/Src/main.c **** 
  41:Core/Src/main.c **** /* USER CODE END PM */
  42:Core/Src/main.c **** 
  43:Core/Src/main.c **** /* Private variables ---------------------------------------------------------*/
  44:Core/Src/main.c **** 
  45:Core/Src/main.c **** /* USER CODE BEGIN PV */
  46:Core/Src/main.c **** //TODO: Define and initialise the global varibales required
  47:Core/Src/main.c **** /*
  48:Core/Src/main.c ****   start_time
  49:Core/Src/main.c ****   end_time
  50:Core/Src/main.c ****   execution_time 
  51:Core/Src/main.c ****   checksum: should be uint64_t
  52:Core/Src/main.c ****   initial width and height maybe or you might opt for an array??
  53:Core/Src/main.c **** */
  54:Core/Src/main.c **** // Image dimensions required for testing
  55:Core/Src/main.c **** volatile int image_dimensions[5] = {128, 160, 192, 224, 256};
  56:Core/Src/main.c **** 
  57:Core/Src/main.c **** // Index to select image size (modifiable via Live Expressions)
  58:Core/Src/main.c **** volatile int size_index = 0;
  59:Core/Src/main.c **** 
  60:Core/Src/main.c **** // Current width and height (exposed for Live Expressions)
  61:Core/Src/main.c **** volatile int width = 128;
  62:Core/Src/main.c **** volatile int height = 128;
  63:Core/Src/main.c **** 
  64:Core/Src/main.c **** // Toggle to select algorithm: 0 = fixed-point, 1 = double
  65:Core/Src/main.c **** volatile int use_double = 1;
  66:Core/Src/main.c **** 
  67:Core/Src/main.c **** // Timing variables (milliseconds from HAL ticks)
  68:Core/Src/main.c **** volatile uint32_t start_time = 0;
  69:Core/Src/main.c **** volatile uint32_t end_time = 0;
  70:Core/Src/main.c **** volatile uint32_t execution_time = 0;
  71:Core/Src/main.c **** 
  72:Core/Src/main.c **** // Global checksum value
  73:Core/Src/main.c **** volatile uint64_t checksum = 0ULL;
  74:Core/Src/main.c **** 
  75:Core/Src/main.c **** // Per-dimension results (index 0..4 correspond to image_dimensions[])
  76:Core/Src/main.c **** volatile uint32_t execution_time_ms_fixed[5] = {0};
  77:Core/Src/main.c **** volatile uint32_t execution_time_ms_double[5] = {0};
  78:Core/Src/main.c **** volatile uint64_t checksum_fixed[5] = {0};
  79:Core/Src/main.c **** volatile uint64_t checksum_double[5] = {0};
  80:Core/Src/main.c **** /* USER CODE END PV */
  81:Core/Src/main.c **** 
  82:Core/Src/main.c **** /* Private function prototypes -----------------------------------------------*/
  83:Core/Src/main.c **** void SystemClock_Config(void);
  84:Core/Src/main.c **** static void MX_GPIO_Init(void);
  85:Core/Src/main.c **** /* USER CODE BEGIN PFP */
  86:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations);
  87:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations);
  88:Core/Src/main.c **** static void run_benchmarks_for_all_dimensions(void);
  89:Core/Src/main.c **** 
  90:Core/Src/main.c **** 
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s 			page 3


  91:Core/Src/main.c **** /* USER CODE END PFP */
  92:Core/Src/main.c **** 
  93:Core/Src/main.c **** /* Private user code ---------------------------------------------------------*/
  94:Core/Src/main.c **** /* USER CODE BEGIN 0 */
  95:Core/Src/main.c **** 
  96:Core/Src/main.c **** /* USER CODE END 0 */
  97:Core/Src/main.c **** 
  98:Core/Src/main.c **** /**
  99:Core/Src/main.c ****   * @brief  The application entry point.
 100:Core/Src/main.c ****   * @retval int
 101:Core/Src/main.c ****   */
 102:Core/Src/main.c **** int main(void)
 103:Core/Src/main.c **** {
 104:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 105:Core/Src/main.c **** 
 106:Core/Src/main.c ****   /* USER CODE END 1 */
 107:Core/Src/main.c **** 
 108:Core/Src/main.c ****   /* MCU Configuration--------------------------------------------------------*/
 109:Core/Src/main.c **** 
 110:Core/Src/main.c ****   /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
 111:Core/Src/main.c ****   HAL_Init();
 112:Core/Src/main.c **** 
 113:Core/Src/main.c ****   /* USER CODE BEGIN Init */
 114:Core/Src/main.c **** 
 115:Core/Src/main.c ****   /* USER CODE END Init */
 116:Core/Src/main.c **** 
 117:Core/Src/main.c ****   /* Configure the system clock */
 118:Core/Src/main.c ****   SystemClock_Config();
 119:Core/Src/main.c **** 
 120:Core/Src/main.c ****   /* USER CODE BEGIN SysInit */
 121:Core/Src/main.c **** 
 122:Core/Src/main.c ****   /* USER CODE END SysInit */
 123:Core/Src/main.c **** 
 124:Core/Src/main.c ****   /* Initialize all configured peripherals */
 125:Core/Src/main.c ****   MX_GPIO_Init();
 126:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 127:Core/Src/main.c ****   //TODO: Turn on LED 0 to signify the start of the operation
 128:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0, GPIO_PIN_SET);
 129:Core/Src/main.c **** 
 130:Core/Src/main.c ****   // Run benchmarks across all 5 image sizes and store results
 131:Core/Src/main.c ****   run_benchmarks_for_all_dimensions();
 132:Core/Src/main.c **** 
 133:Core/Src/main.c ****   //TODO: Turn on LED 1 to signify the end of the operation
 134:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, GPIO_PIN_SET);
 135:Core/Src/main.c **** 
 136:Core/Src/main.c ****   //TODO: Hold the LEDs on for a 1s delay
 137:Core/Src/main.c ****   HAL_Delay(1000);
 138:Core/Src/main.c **** 
 139:Core/Src/main.c ****   //TODO: Turn off the LEDs
 140:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0 | GPIO_PIN_1, GPIO_PIN_RESET);
 141:Core/Src/main.c **** 
 142:Core/Src/main.c ****   /* USER CODE END 2 */
 143:Core/Src/main.c **** 
 144:Core/Src/main.c ****   /* Infinite loop */
 145:Core/Src/main.c ****   /* USER CODE BEGIN WHILE */
 146:Core/Src/main.c ****   while (1)
 147:Core/Src/main.c ****   {
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s 			page 4


 148:Core/Src/main.c ****     /* USER CODE END WHILE */
 149:Core/Src/main.c **** 
 150:Core/Src/main.c ****     /* USER CODE BEGIN 3 */
 151:Core/Src/main.c ****   }
 152:Core/Src/main.c ****   /* USER CODE END 3 */
 153:Core/Src/main.c **** }
 154:Core/Src/main.c **** 
 155:Core/Src/main.c **** /**
 156:Core/Src/main.c ****   * @brief System Clock Configuration
 157:Core/Src/main.c ****   * @retval None
 158:Core/Src/main.c ****   */
 159:Core/Src/main.c **** void SystemClock_Config(void)
 160:Core/Src/main.c **** {
 161:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 162:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 163:Core/Src/main.c **** 
 164:Core/Src/main.c ****   /** Initializes the RCC Oscillators according to the specified parameters
 165:Core/Src/main.c ****   * in the RCC_OscInitTypeDef structure.
 166:Core/Src/main.c ****   */
 167:Core/Src/main.c ****   RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 168:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 169:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 170:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 171:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 172:Core/Src/main.c ****   {
 173:Core/Src/main.c ****     Error_Handler();
 174:Core/Src/main.c ****   }
 175:Core/Src/main.c **** 
 176:Core/Src/main.c ****   /** Initializes the CPU, AHB and APB buses clocks
 177:Core/Src/main.c ****   */
 178:Core/Src/main.c ****   RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 179:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 180:Core/Src/main.c ****   RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_HSI;
 181:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 182:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 183:Core/Src/main.c **** 
 184:Core/Src/main.c ****   if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_0) != HAL_OK)
 185:Core/Src/main.c ****   {
 186:Core/Src/main.c ****     Error_Handler();
 187:Core/Src/main.c ****   }
 188:Core/Src/main.c **** }
 189:Core/Src/main.c **** 
 190:Core/Src/main.c **** /**
 191:Core/Src/main.c ****   * @brief GPIO Initialization Function
 192:Core/Src/main.c ****   * @param None
 193:Core/Src/main.c ****   * @retval None
 194:Core/Src/main.c ****   */
 195:Core/Src/main.c **** static void MX_GPIO_Init(void)
 196:Core/Src/main.c **** {
  26              		.loc 1 196 1 view -0
  27              		.cfi_startproc
  28              		@ args = 0, pretend = 0, frame = 32
  29              		@ frame_needed = 0, uses_anonymous_args = 0
  30 0000 10B5     		push	{r4, lr}
  31              	.LCFI0:
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 4, -8
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s 			page 5


  34              		.cfi_offset 14, -4
  35 0002 88B0     		sub	sp, sp, #32
  36              	.LCFI1:
  37              		.cfi_def_cfa_offset 40
 197:Core/Src/main.c ****   GPIO_InitTypeDef GPIO_InitStruct = {0};
  38              		.loc 1 197 3 view .LVU1
  39              		.loc 1 197 20 is_stmt 0 view .LVU2
  40 0004 1422     		movs	r2, #20
  41 0006 0021     		movs	r1, #0
  42 0008 03A8     		add	r0, sp, #12
  43 000a FFF7FEFF 		bl	memset
  44              	.LVL0:
 198:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_1 */
 199:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_1 */
 200:Core/Src/main.c **** 
 201:Core/Src/main.c ****   /* GPIO Ports Clock Enable */
 202:Core/Src/main.c ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  45              		.loc 1 202 3 is_stmt 1 view .LVU3
  46              	.LBB4:
  47              		.loc 1 202 3 view .LVU4
  48              		.loc 1 202 3 view .LVU5
  49 000e 134B     		ldr	r3, .L2
  50 0010 5A69     		ldr	r2, [r3, #20]
  51 0012 8021     		movs	r1, #128
  52 0014 C902     		lsls	r1, r1, #11
  53 0016 0A43     		orrs	r2, r1
  54 0018 5A61     		str	r2, [r3, #20]
  55              		.loc 1 202 3 view .LVU6
  56 001a 5A69     		ldr	r2, [r3, #20]
  57 001c 0A40     		ands	r2, r1
  58 001e 0192     		str	r2, [sp, #4]
  59              		.loc 1 202 3 view .LVU7
  60 0020 019A     		ldr	r2, [sp, #4]
  61              	.LBE4:
  62              		.loc 1 202 3 view .LVU8
 203:Core/Src/main.c ****   __HAL_RCC_GPIOA_CLK_ENABLE();
  63              		.loc 1 203 3 view .LVU9
  64              	.LBB5:
  65              		.loc 1 203 3 view .LVU10
  66              		.loc 1 203 3 view .LVU11
  67 0022 5A69     		ldr	r2, [r3, #20]
  68 0024 8021     		movs	r1, #128
  69 0026 8902     		lsls	r1, r1, #10
  70 0028 0A43     		orrs	r2, r1
  71 002a 5A61     		str	r2, [r3, #20]
  72              		.loc 1 203 3 view .LVU12
  73 002c 5B69     		ldr	r3, [r3, #20]
  74 002e 0B40     		ands	r3, r1
  75 0030 0293     		str	r3, [sp, #8]
  76              		.loc 1 203 3 view .LVU13
  77 0032 029B     		ldr	r3, [sp, #8]
  78              	.LBE5:
  79              		.loc 1 203 3 view .LVU14
 204:Core/Src/main.c **** 
 205:Core/Src/main.c ****   /*Configure GPIO pin Output Level */
 206:Core/Src/main.c ****   HAL_GPIO_WritePin(GPIOB, GPIO_PIN_0|GPIO_PIN_1, GPIO_PIN_RESET);
  80              		.loc 1 206 3 view .LVU15
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s 			page 6


  81 0034 0A4C     		ldr	r4, .L2+4
  82 0036 0022     		movs	r2, #0
  83 0038 0321     		movs	r1, #3
  84 003a 2000     		movs	r0, r4
  85 003c FFF7FEFF 		bl	HAL_GPIO_WritePin
  86              	.LVL1:
 207:Core/Src/main.c **** 
 208:Core/Src/main.c ****   /*Configure GPIO pins : PB0 PB1 */
 209:Core/Src/main.c ****   GPIO_InitStruct.Pin = GPIO_PIN_0|GPIO_PIN_1;
  87              		.loc 1 209 3 view .LVU16
  88              		.loc 1 209 23 is_stmt 0 view .LVU17
  89 0040 0323     		movs	r3, #3
  90 0042 0393     		str	r3, [sp, #12]
 210:Core/Src/main.c ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
  91              		.loc 1 210 3 is_stmt 1 view .LVU18
  92              		.loc 1 210 24 is_stmt 0 view .LVU19
  93 0044 023B     		subs	r3, r3, #2
  94 0046 0493     		str	r3, [sp, #16]
 211:Core/Src/main.c ****   GPIO_InitStruct.Pull = GPIO_NOPULL;
  95              		.loc 1 211 3 is_stmt 1 view .LVU20
  96              		.loc 1 211 24 is_stmt 0 view .LVU21
  97 0048 0023     		movs	r3, #0
  98 004a 0593     		str	r3, [sp, #20]
 212:Core/Src/main.c ****   GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
  99              		.loc 1 212 3 is_stmt 1 view .LVU22
 100              		.loc 1 212 25 is_stmt 0 view .LVU23
 101 004c 0693     		str	r3, [sp, #24]
 213:Core/Src/main.c ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 102              		.loc 1 213 3 is_stmt 1 view .LVU24
 103 004e 03A9     		add	r1, sp, #12
 104 0050 2000     		movs	r0, r4
 105 0052 FFF7FEFF 		bl	HAL_GPIO_Init
 106              	.LVL2:
 214:Core/Src/main.c **** 
 215:Core/Src/main.c **** /* USER CODE BEGIN MX_GPIO_Init_2 */
 216:Core/Src/main.c **** /* USER CODE END MX_GPIO_Init_2 */
 217:Core/Src/main.c **** }
 107              		.loc 1 217 1 is_stmt 0 view .LVU25
 108 0056 08B0     		add	sp, sp, #32
 109              		@ sp needed
 110 0058 10BD     		pop	{r4, pc}
 111              	.L3:
 112 005a C046     		.align	2
 113              	.L2:
 114 005c 00100240 		.word	1073876992
 115 0060 00040048 		.word	1207960576
 116              		.cfi_endproc
 117              	.LFE42:
 119              		.global	__aeabi_ldivmod
 120              		.global	__aeabi_lmul
 121              		.section	.text.calculate_mandelbrot_fixed_point_arithmetic,"ax",%progbits
 122              		.align	1
 123              		.global	calculate_mandelbrot_fixed_point_arithmetic
 124              		.syntax unified
 125              		.code	16
 126              		.thumb_func
 128              	calculate_mandelbrot_fixed_point_arithmetic:
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s 			page 7


 129              	.LVL3:
 130              	.LFB44:
 218:Core/Src/main.c **** 
 219:Core/Src/main.c **** /* USER CODE BEGIN 4 */
 220:Core/Src/main.c **** static void run_benchmarks_for_all_dimensions(void)
 221:Core/Src/main.c **** {
 222:Core/Src/main.c ****   for (int i = 0; i < 5; i++) {
 223:Core/Src/main.c ****     // Update selected size and expose width/height
 224:Core/Src/main.c ****     size_index = i;
 225:Core/Src/main.c ****     width = image_dimensions[i];
 226:Core/Src/main.c ****     height = image_dimensions[i];
 227:Core/Src/main.c **** 
 228:Core/Src/main.c ****     // Record the start time
 229:Core/Src/main.c ****     start_time = HAL_GetTick();
 230:Core/Src/main.c **** 
 231:Core/Src/main.c ****     // Compute checksum for the selected algorithm
 232:Core/Src/main.c ****     if (use_double) {
 233:Core/Src/main.c ****       checksum = calculate_mandelbrot_double(width, height, MAX_ITER);
 234:Core/Src/main.c ****     } else {
 235:Core/Src/main.c ****       checksum = calculate_mandelbrot_fixed_point_arithmetic(width, height, MAX_ITER);
 236:Core/Src/main.c ****     }
 237:Core/Src/main.c **** 
 238:Core/Src/main.c ****     // Record the end time and compute execution time
 239:Core/Src/main.c ****     end_time = HAL_GetTick();
 240:Core/Src/main.c ****     execution_time = end_time - start_time;
 241:Core/Src/main.c **** 
 242:Core/Src/main.c ****     // Store into per-dimension arrays
 243:Core/Src/main.c ****     if (use_double) {
 244:Core/Src/main.c ****       checksum_double[i] = checksum;
 245:Core/Src/main.c ****       execution_time_ms_double[i] = execution_time;
 246:Core/Src/main.c ****     } else {
 247:Core/Src/main.c ****       checksum_fixed[i] = checksum;
 248:Core/Src/main.c ****       execution_time_ms_fixed[i] = execution_time;
 249:Core/Src/main.c ****     }
 250:Core/Src/main.c ****   }
 251:Core/Src/main.c **** }
 252:Core/Src/main.c **** 
 253:Core/Src/main.c **** //TODO: Mandelbroat using variable type integers and fixed point arithmetic
 254:Core/Src/main.c **** uint64_t calculate_mandelbrot_fixed_point_arithmetic(int width, int height, int max_iterations){
 131              		.loc 1 254 96 is_stmt 1 view -0
 132              		.cfi_startproc
 133              		@ args = 0, pretend = 0, frame = 96
 134              		@ frame_needed = 0, uses_anonymous_args = 0
 135              		.loc 1 254 96 is_stmt 0 view .LVU27
 136 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 137              	.LCFI2:
 138              		.cfi_def_cfa_offset 20
 139              		.cfi_offset 4, -20
 140              		.cfi_offset 5, -16
 141              		.cfi_offset 6, -12
 142              		.cfi_offset 7, -8
 143              		.cfi_offset 14, -4
 144 0002 DE46     		mov	lr, fp
 145 0004 5746     		mov	r7, r10
 146 0006 4E46     		mov	r6, r9
 147 0008 4546     		mov	r5, r8
 148 000a E0B5     		push	{r5, r6, r7, lr}
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s 			page 8


 149              	.LCFI3:
 150              		.cfi_def_cfa_offset 36
 151              		.cfi_offset 8, -36
 152              		.cfi_offset 9, -32
 153              		.cfi_offset 10, -28
 154              		.cfi_offset 11, -24
 155 000c 99B0     		sub	sp, sp, #100
 156              	.LCFI4:
 157              		.cfi_def_cfa_offset 136
 158 000e 8346     		mov	fp, r0
 159 0010 1791     		str	r1, [sp, #92]
 160 0012 9146     		mov	r9, r2
 255:Core/Src/main.c ****   uint64_t mandelbrot_sum = 0;
 161              		.loc 1 255 3 is_stmt 1 view .LVU28
 162              	.LVL4:
 256:Core/Src/main.c ****     // Fixed-point Q3.29 scaling
 257:Core/Src/main.c ****     const int64_t SCALE = (int64_t)1 << 29;
 163              		.loc 1 257 5 view .LVU29
 258:Core/Src/main.c ****     const int64_t FOUR_S = 4 * SCALE;
 164              		.loc 1 258 5 view .LVU30
 259:Core/Src/main.c **** 
 260:Core/Src/main.c ****     for (int y = 0; y < height; y++) {
 165              		.loc 1 260 5 view .LVU31
 166              	.LBB6:
 167              		.loc 1 260 10 view .LVU32
 168              		.loc 1 260 14 is_stmt 0 view .LVU33
 169 0014 0023     		movs	r3, #0
 170 0016 1693     		str	r3, [sp, #88]
 171              	.LBE6:
 255:Core/Src/main.c ****     // Fixed-point Q3.29 scaling
 172              		.loc 1 255 12 view .LVU34
 173 0018 0023     		movs	r3, #0
 174 001a 0024     		movs	r4, #0
 175 001c 1493     		str	r3, [sp, #80]
 176 001e 1594     		str	r4, [sp, #84]
 177 0020 009C     		ldr	r4, [sp]
 178 0022 019D     		ldr	r5, [sp, #4]
 179              	.LBB15:
 180              		.loc 1 260 5 view .LVU35
 181 0024 9AE0     		b	.L5
 182              	.LVL5:
 183              	.L13:
 184              	.LBB7:
 185              	.LBB8:
 186              	.LBB9:
 187              	.LBB10:
 261:Core/Src/main.c ****         // y0 = (y/height)*2.0 - 1.0
 262:Core/Src/main.c ****         int64_t y0 = ((int64_t)y * 2 * SCALE) / height - SCALE;
 263:Core/Src/main.c ****         for (int x = 0; x < width; x++) {
 264:Core/Src/main.c ****             // x0 = (x/width)*3.5 - 2.5
 265:Core/Src/main.c ****             int64_t x0 = ((int64_t)x * 7 * SCALE) / (2 * width) - (5 * SCALE) / 2;
 266:Core/Src/main.c **** 
 267:Core/Src/main.c ****             int64_t xi = 0;
 268:Core/Src/main.c ****             int64_t yi = 0;
 269:Core/Src/main.c ****             int iteration = 0;
 270:Core/Src/main.c **** 
 271:Core/Src/main.c ****             while (iteration < max_iterations) {
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s 			page 9


 272:Core/Src/main.c ****                 int64_t xi_sq = (xi * xi) >> 29;
 273:Core/Src/main.c ****                 int64_t yi_sq = (yi * yi) >> 29;
 274:Core/Src/main.c ****                 if (xi_sq + yi_sq > FOUR_S) {
 275:Core/Src/main.c ****                     break;
 276:Core/Src/main.c ****                 }
 277:Core/Src/main.c ****                 int64_t temp = xi_sq - yi_sq;
 188              		.loc 1 277 17 is_stmt 1 view .LVU36
 189              		.loc 1 277 25 is_stmt 0 view .LVU37
 190 0026 3200     		movs	r2, r6
 191 0028 3B00     		movs	r3, r7
 192 002a 0098     		ldr	r0, [sp]
 193 002c 0199     		ldr	r1, [sp, #4]
 194              	.LVL6:
 195              		.loc 1 277 25 view .LVU38
 196 002e 121A     		subs	r2, r2, r0
 197 0030 8B41     		sbcs	r3, r3, r1
 198 0032 0892     		str	r2, [sp, #32]
 199 0034 0993     		str	r3, [sp, #36]
 200              	.LVL7:
 278:Core/Src/main.c ****                 yi = ((2 * xi * yi) >> 29) + y0;
 201              		.loc 1 278 17 is_stmt 1 view .LVU39
 202              		.loc 1 278 31 is_stmt 0 view .LVU40
 203 0036 069A     		ldr	r2, [sp, #24]
 204 0038 079B     		ldr	r3, [sp, #28]
 205              	.LVL8:
 206              		.loc 1 278 31 view .LVU41
 207 003a 0498     		ldr	r0, [sp, #16]
 208 003c 0599     		ldr	r1, [sp, #20]
 209 003e FFF7FEFF 		bl	__aeabi_lmul
 210              	.LVL9:
 211 0042 0200     		movs	r2, r0
 212 0044 0B00     		movs	r3, r1
 213 0046 9218     		adds	r2, r2, r2
 214 0048 5B41     		adcs	r3, r3, r3
 215              		.loc 1 278 37 view .LVU42
 216 004a D900     		lsls	r1, r3, #3
 217 004c 500F     		lsrs	r0, r2, #29
 218 004e 0290     		str	r0, [sp, #8]
 219 0050 0843     		orrs	r0, r1
 220 0052 0290     		str	r0, [sp, #8]
 221 0054 5B17     		asrs	r3, r3, #29
 222 0056 0393     		str	r3, [sp, #12]
 223              		.loc 1 278 20 view .LVU43
 224 0058 0299     		ldr	r1, [sp, #8]
 225 005a 039A     		ldr	r2, [sp, #12]
 226 005c 0C9B     		ldr	r3, [sp, #48]
 227 005e 0D9C     		ldr	r4, [sp, #52]
 228 0060 C918     		adds	r1, r1, r3
 229 0062 6241     		adcs	r2, r2, r4
 230 0064 0691     		str	r1, [sp, #24]
 231 0066 0792     		str	r2, [sp, #28]
 232              	.LVL10:
 279:Core/Src/main.c ****                 xi = temp + x0;
 233              		.loc 1 279 17 is_stmt 1 view .LVU44
 234              		.loc 1 279 20 is_stmt 0 view .LVU45
 235 0068 089A     		ldr	r2, [sp, #32]
 236 006a 099B     		ldr	r3, [sp, #36]
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s 			page 10


 237 006c 0A98     		ldr	r0, [sp, #40]
 238 006e 0B99     		ldr	r1, [sp, #44]
 239 0070 1218     		adds	r2, r2, r0
 240 0072 4B41     		adcs	r3, r3, r1
 241 0074 0492     		str	r2, [sp, #16]
 242 0076 0593     		str	r3, [sp, #20]
 243              	.LVL11:
 280:Core/Src/main.c ****                 iteration++;
 244              		.loc 1 280 17 is_stmt 1 view .LVU46
 245              		.loc 1 280 26 is_stmt 0 view .LVU47
 246 0078 0123     		movs	r3, #1
 247 007a 9C46     		mov	ip, r3
 248 007c E244     		add	r10, r10, ip
 249              	.LVL12:
 250              	.L7:
 251              		.loc 1 280 26 view .LVU48
 252              	.LBE10:
 271:Core/Src/main.c ****                 int64_t xi_sq = (xi * xi) >> 29;
 253              		.loc 1 271 30 is_stmt 1 view .LVU49
 254 007e CA45     		cmp	r10, r9
 255 0080 24DA     		bge	.L8
 256              	.LBB11:
 272:Core/Src/main.c ****                 int64_t yi_sq = (yi * yi) >> 29;
 257              		.loc 1 272 17 view .LVU50
 272:Core/Src/main.c ****                 int64_t yi_sq = (yi * yi) >> 29;
 258              		.loc 1 272 37 is_stmt 0 view .LVU51
 259 0082 0498     		ldr	r0, [sp, #16]
 260 0084 0599     		ldr	r1, [sp, #20]
 261 0086 0200     		movs	r2, r0
 262 0088 0B00     		movs	r3, r1
 263 008a FFF7FEFF 		bl	__aeabi_lmul
 264              	.LVL13:
 272:Core/Src/main.c ****                 int64_t yi_sq = (yi * yi) >> 29;
 265              		.loc 1 272 25 view .LVU52
 266 008e CB00     		lsls	r3, r1, #3
 267 0090 460F     		lsrs	r6, r0, #29
 268 0092 1E43     		orrs	r6, r3
 269 0094 4F17     		asrs	r7, r1, #29
 270              	.LVL14:
 273:Core/Src/main.c ****                 if (xi_sq + yi_sq > FOUR_S) {
 271              		.loc 1 273 17 is_stmt 1 view .LVU53
 273:Core/Src/main.c ****                 if (xi_sq + yi_sq > FOUR_S) {
 272              		.loc 1 273 37 is_stmt 0 view .LVU54
 273 0096 0698     		ldr	r0, [sp, #24]
 274 0098 0799     		ldr	r1, [sp, #28]
 275 009a 0200     		movs	r2, r0
 276 009c 0B00     		movs	r3, r1
 277 009e FFF7FEFF 		bl	__aeabi_lmul
 278              	.LVL15:
 273:Core/Src/main.c ****                 if (xi_sq + yi_sq > FOUR_S) {
 279              		.loc 1 273 25 view .LVU55
 280 00a2 CB00     		lsls	r3, r1, #3
 281 00a4 420F     		lsrs	r2, r0, #29
 282 00a6 0092     		str	r2, [sp]
 283 00a8 1A43     		orrs	r2, r3
 284 00aa 0092     		str	r2, [sp]
 285 00ac 4B17     		asrs	r3, r1, #29
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s 			page 11


 286 00ae 0193     		str	r3, [sp, #4]
 287              	.LVL16:
 274:Core/Src/main.c ****                     break;
 288              		.loc 1 274 17 is_stmt 1 view .LVU56
 274:Core/Src/main.c ****                     break;
 289              		.loc 1 274 27 is_stmt 0 view .LVU57
 290 00b0 3200     		movs	r2, r6
 291 00b2 3B00     		movs	r3, r7
 292 00b4 0098     		ldr	r0, [sp]
 293 00b6 0199     		ldr	r1, [sp, #4]
 294 00b8 1218     		adds	r2, r2, r0
 295 00ba 4B41     		adcs	r3, r3, r1
 296 00bc 1100     		movs	r1, r2
 274:Core/Src/main.c ****                     break;
 297              		.loc 1 274 20 view .LVU58
 298 00be 002B     		cmp	r3, #0
 299 00c0 04DC     		bgt	.L8
 300 00c2 B0D1     		bne	.L13
 301 00c4 8023     		movs	r3, #128
 302 00c6 1B06     		lsls	r3, r3, #24
 303 00c8 9942     		cmp	r1, r3
 304 00ca ACD9     		bls	.L13
 305              	.LVL17:
 306              	.L8:
 274:Core/Src/main.c ****                     break;
 307              		.loc 1 274 20 view .LVU59
 308              	.LBE11:
 281:Core/Src/main.c ****             }
 282:Core/Src/main.c ****             mandelbrot_sum += (uint64_t)iteration;
 309              		.loc 1 282 31 view .LVU60
 310 00cc 009C     		ldr	r4, [sp]
 311 00ce 019D     		ldr	r5, [sp, #4]
 312              		.loc 1 282 13 is_stmt 1 view .LVU61
 313              		.loc 1 282 31 is_stmt 0 view .LVU62
 314 00d0 5346     		mov	r3, r10
 315 00d2 1293     		str	r3, [sp, #72]
 316 00d4 DB17     		asrs	r3, r3, #31
 317 00d6 1393     		str	r3, [sp, #76]
 318              		.loc 1 282 28 view .LVU63
 319 00d8 149A     		ldr	r2, [sp, #80]
 320 00da 159B     		ldr	r3, [sp, #84]
 321 00dc 1298     		ldr	r0, [sp, #72]
 322 00de 1399     		ldr	r1, [sp, #76]
 323 00e0 1218     		adds	r2, r2, r0
 324 00e2 4B41     		adcs	r3, r3, r1
 325 00e4 1492     		str	r2, [sp, #80]
 326 00e6 1593     		str	r3, [sp, #84]
 327              	.LVL18:
 328              		.loc 1 282 28 view .LVU64
 329              	.LBE9:
 263:Core/Src/main.c ****             // x0 = (x/width)*3.5 - 2.5
 330              		.loc 1 263 37 is_stmt 1 discriminator 2 view .LVU65
 331 00e8 0123     		movs	r3, #1
 332 00ea 9C46     		mov	ip, r3
 333 00ec E044     		add	r8, r8, ip
 334              	.LVL19:
 335              	.L6:
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s 			page 12


 263:Core/Src/main.c ****             // x0 = (x/width)*3.5 - 2.5
 336              		.loc 1 263 27 discriminator 1 view .LVU66
 337 00ee D845     		cmp	r8, fp
 338 00f0 31DA     		bge	.L14
 339              	.LBB12:
 265:Core/Src/main.c **** 
 340              		.loc 1 265 13 view .LVU67
 265:Core/Src/main.c **** 
 341              		.loc 1 265 27 is_stmt 0 view .LVU68
 342 00f2 4346     		mov	r3, r8
 343 00f4 1093     		str	r3, [sp, #64]
 344 00f6 DB17     		asrs	r3, r3, #31
 345 00f8 1193     		str	r3, [sp, #68]
 265:Core/Src/main.c **** 
 346              		.loc 1 265 42 view .LVU69
 347 00fa 1098     		ldr	r0, [sp, #64]
 348 00fc 1199     		ldr	r1, [sp, #68]
 349 00fe 420F     		lsrs	r2, r0, #29
 350 0100 DB00     		lsls	r3, r3, #3
 351 0102 0F93     		str	r3, [sp, #60]
 352 0104 1343     		orrs	r3, r2
 353 0106 0F93     		str	r3, [sp, #60]
 354 0108 0200     		movs	r2, r0
 355 010a 0B00     		movs	r3, r1
 356 010c C100     		lsls	r1, r0, #3
 357 010e 0E91     		str	r1, [sp, #56]
 358 0110 0E98     		ldr	r0, [sp, #56]
 359 0112 0F99     		ldr	r1, [sp, #60]
 360 0114 801A     		subs	r0, r0, r2
 361 0116 9941     		sbcs	r1, r1, r3
 362 0118 C208     		lsrs	r2, r0, #3
 363 011a 4B07     		lsls	r3, r1, #29
 364 011c 4107     		lsls	r1, r0, #29
 365 011e 8C46     		mov	ip, r1
 366 0120 6046     		mov	r0, ip
 367 0122 1A43     		orrs	r2, r3
 368 0124 1100     		movs	r1, r2
 265:Core/Src/main.c **** 
 369              		.loc 1 265 56 view .LVU70
 370 0126 5B46     		mov	r3, fp
 371 0128 5A00     		lsls	r2, r3, #1
 372 012a D317     		asrs	r3, r2, #31
 265:Core/Src/main.c **** 
 373              		.loc 1 265 51 view .LVU71
 374 012c FFF7FEFF 		bl	__aeabi_ldivmod
 375              	.LVL20:
 265:Core/Src/main.c **** 
 376              		.loc 1 265 21 view .LVU72
 377 0130 B022     		movs	r2, #176
 378 0132 1206     		lsls	r2, r2, #24
 379 0134 0123     		movs	r3, #1
 380 0136 5B42     		rsbs	r3, r3, #0
 381 0138 8018     		adds	r0, r0, r2
 382 013a 5941     		adcs	r1, r1, r3
 383 013c 0A90     		str	r0, [sp, #40]
 384 013e 0B91     		str	r1, [sp, #44]
 385              	.LVL21:
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s 			page 13


 267:Core/Src/main.c ****             int64_t yi = 0;
 386              		.loc 1 267 13 is_stmt 1 view .LVU73
 268:Core/Src/main.c ****             int iteration = 0;
 387              		.loc 1 268 13 view .LVU74
 269:Core/Src/main.c **** 
 388              		.loc 1 269 13 view .LVU75
 271:Core/Src/main.c ****                 int64_t xi_sq = (xi * xi) >> 29;
 389              		.loc 1 271 13 view .LVU76
 269:Core/Src/main.c **** 
 390              		.loc 1 269 17 is_stmt 0 view .LVU77
 391 0140 0023     		movs	r3, #0
 392 0142 9A46     		mov	r10, r3
 268:Core/Src/main.c ****             int iteration = 0;
 393              		.loc 1 268 21 view .LVU78
 394 0144 0022     		movs	r2, #0
 395 0146 0023     		movs	r3, #0
 396 0148 0692     		str	r2, [sp, #24]
 397 014a 0793     		str	r3, [sp, #28]
 267:Core/Src/main.c ****             int64_t yi = 0;
 398              		.loc 1 267 21 view .LVU79
 399 014c 0492     		str	r2, [sp, #16]
 400 014e 0593     		str	r3, [sp, #20]
 401 0150 0094     		str	r4, [sp]
 402 0152 0195     		str	r5, [sp, #4]
 271:Core/Src/main.c ****                 int64_t xi_sq = (xi * xi) >> 29;
 403              		.loc 1 271 19 view .LVU80
 404 0154 93E7     		b	.L7
 405              	.LVL22:
 406              	.L14:
 271:Core/Src/main.c ****                 int64_t xi_sq = (xi * xi) >> 29;
 407              		.loc 1 271 19 view .LVU81
 408              	.LBE12:
 409              	.LBE8:
 410              	.LBE7:
 260:Core/Src/main.c ****         // y0 = (y/height)*2.0 - 1.0
 411              		.loc 1 260 34 is_stmt 1 discriminator 2 view .LVU82
 412 0156 169B     		ldr	r3, [sp, #88]
 413 0158 0133     		adds	r3, r3, #1
 414 015a 1693     		str	r3, [sp, #88]
 415              	.LVL23:
 416              	.L5:
 260:Core/Src/main.c ****         // y0 = (y/height)*2.0 - 1.0
 417              		.loc 1 260 23 discriminator 1 view .LVU83
 418 015c 169B     		ldr	r3, [sp, #88]
 419 015e 179A     		ldr	r2, [sp, #92]
 420 0160 9342     		cmp	r3, r2
 421 0162 14DA     		bge	.L15
 422              	.LBB14:
 262:Core/Src/main.c ****         for (int x = 0; x < width; x++) {
 423              		.loc 1 262 9 view .LVU84
 262:Core/Src/main.c ****         for (int x = 0; x < width; x++) {
 424              		.loc 1 262 23 is_stmt 0 view .LVU85
 425 0164 169A     		ldr	r2, [sp, #88]
 426 0166 D117     		asrs	r1, r2, #31
 262:Core/Src/main.c ****         for (int x = 0; x < width; x++) {
 427              		.loc 1 262 38 view .LVU86
 428 0168 9308     		lsrs	r3, r2, #2
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s 			page 14


 429 016a 8907     		lsls	r1, r1, #30
 430 016c 1943     		orrs	r1, r3
 431 016e 9007     		lsls	r0, r2, #30
 262:Core/Src/main.c ****         for (int x = 0; x < width; x++) {
 432              		.loc 1 262 47 view .LVU87
 433 0170 179A     		ldr	r2, [sp, #92]
 434 0172 D317     		asrs	r3, r2, #31
 435 0174 FFF7FEFF 		bl	__aeabi_ldivmod
 436              	.LVL24:
 262:Core/Src/main.c ****         for (int x = 0; x < width; x++) {
 437              		.loc 1 262 17 view .LVU88
 438 0178 E022     		movs	r2, #224
 439 017a 1206     		lsls	r2, r2, #24
 440 017c 0123     		movs	r3, #1
 441 017e 5B42     		rsbs	r3, r3, #0
 442 0180 8018     		adds	r0, r0, r2
 443 0182 5941     		adcs	r1, r1, r3
 444 0184 0C90     		str	r0, [sp, #48]
 445 0186 0D91     		str	r1, [sp, #52]
 446              	.LVL25:
 263:Core/Src/main.c ****             // x0 = (x/width)*3.5 - 2.5
 447              		.loc 1 263 9 is_stmt 1 view .LVU89
 448              	.LBB13:
 263:Core/Src/main.c ****             // x0 = (x/width)*3.5 - 2.5
 449              		.loc 1 263 14 view .LVU90
 263:Core/Src/main.c ****             // x0 = (x/width)*3.5 - 2.5
 450              		.loc 1 263 18 is_stmt 0 view .LVU91
 451 0188 0023     		movs	r3, #0
 452 018a 9846     		mov	r8, r3
 263:Core/Src/main.c ****             // x0 = (x/width)*3.5 - 2.5
 453              		.loc 1 263 9 view .LVU92
 454 018c AFE7     		b	.L6
 455              	.LVL26:
 456              	.L15:
 263:Core/Src/main.c ****             // x0 = (x/width)*3.5 - 2.5
 457              		.loc 1 263 9 view .LVU93
 458              	.LBE13:
 459              	.LBE14:
 460              	.LBE15:
 283:Core/Src/main.c ****         }
 284:Core/Src/main.c ****     }
 285:Core/Src/main.c **** 
 286:Core/Src/main.c ****     return mandelbrot_sum;
 461              		.loc 1 286 5 is_stmt 1 view .LVU94
 287:Core/Src/main.c **** 
 288:Core/Src/main.c **** }
 462              		.loc 1 288 1 is_stmt 0 view .LVU95
 463 018e 1498     		ldr	r0, [sp, #80]
 464 0190 1599     		ldr	r1, [sp, #84]
 465 0192 19B0     		add	sp, sp, #100
 466              		@ sp needed
 467              	.LVL27:
 468              	.LVL28:
 469              		.loc 1 288 1 view .LVU96
 470 0194 F0BC     		pop	{r4, r5, r6, r7}
 471 0196 BB46     		mov	fp, r7
 472 0198 B246     		mov	r10, r6
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s 			page 15


 473 019a A946     		mov	r9, r5
 474 019c A046     		mov	r8, r4
 475 019e F0BD     		pop	{r4, r5, r6, r7, pc}
 476              		.cfi_endproc
 477              	.LFE44:
 479              		.global	__aeabi_i2d
 480              		.global	__aeabi_ddiv
 481              		.global	__aeabi_dadd
 482              		.global	__aeabi_dsub
 483              		.global	__aeabi_dmul
 484              		.global	__aeabi_dcmpgt
 485              		.section	.text.calculate_mandelbrot_double,"ax",%progbits
 486              		.align	1
 487              		.global	calculate_mandelbrot_double
 488              		.syntax unified
 489              		.code	16
 490              		.thumb_func
 492              	calculate_mandelbrot_double:
 493              	.LVL29:
 494              	.LFB45:
 289:Core/Src/main.c **** 
 290:Core/Src/main.c **** //TODO: Mandelbroat using variable type double
 291:Core/Src/main.c **** uint64_t calculate_mandelbrot_double(int width, int height, int max_iterations){
 495              		.loc 1 291 80 is_stmt 1 view -0
 496              		.cfi_startproc
 497              		@ args = 0, pretend = 0, frame = 56
 498              		@ frame_needed = 0, uses_anonymous_args = 0
 499              		.loc 1 291 80 is_stmt 0 view .LVU98
 500 0000 F0B5     		push	{r4, r5, r6, r7, lr}
 501              	.LCFI5:
 502              		.cfi_def_cfa_offset 20
 503              		.cfi_offset 4, -20
 504              		.cfi_offset 5, -16
 505              		.cfi_offset 6, -12
 506              		.cfi_offset 7, -8
 507              		.cfi_offset 14, -4
 508 0002 DE46     		mov	lr, fp
 509 0004 5746     		mov	r7, r10
 510 0006 4E46     		mov	r6, r9
 511 0008 4546     		mov	r5, r8
 512 000a E0B5     		push	{r5, r6, r7, lr}
 513              	.LCFI6:
 514              		.cfi_def_cfa_offset 36
 515              		.cfi_offset 8, -36
 516              		.cfi_offset 9, -32
 517              		.cfi_offset 10, -28
 518              		.cfi_offset 11, -24
 519 000c 8FB0     		sub	sp, sp, #60
 520              	.LCFI7:
 521              		.cfi_def_cfa_offset 96
 522 000e 8346     		mov	fp, r0
 523 0010 0F00     		movs	r7, r1
 524 0012 9146     		mov	r9, r2
 292:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 525              		.loc 1 292 5 is_stmt 1 view .LVU99
 526              	.LVL30:
 293:Core/Src/main.c ****     for (int y = 0; y < height; y++) {
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s 			page 16


 527              		.loc 1 293 5 view .LVU100
 528              	.LBB16:
 529              		.loc 1 293 10 view .LVU101
 530              		.loc 1 293 14 is_stmt 0 view .LVU102
 531 0014 0026     		movs	r6, #0
 532              	.LBE16:
 292:Core/Src/main.c ****     uint64_t mandelbrot_sum = 0;
 533              		.loc 1 292 14 view .LVU103
 534 0016 0023     		movs	r3, #0
 535 0018 0024     		movs	r4, #0
 536 001a 0A93     		str	r3, [sp, #40]
 537 001c 0B94     		str	r4, [sp, #44]
 538              	.LBB25:
 539              		.loc 1 293 5 view .LVU104
 540 001e 74E0     		b	.L17
 541              	.LVL31:
 542              	.L24:
 543              	.LBB17:
 544              	.LBB18:
 545              	.LBB19:
 546              	.LBB20:
 294:Core/Src/main.c ****         double y0 = ((double)y / (double)height) * 2.0 - 1.0;
 295:Core/Src/main.c ****         for (int x = 0; x < width; x++) {
 296:Core/Src/main.c ****             double x0 = ((double)x / (double)width) * 3.5 - 2.5;
 297:Core/Src/main.c ****             double xi = 0.0;
 298:Core/Src/main.c ****             double yi = 0.0;
 299:Core/Src/main.c ****             int iteration = 0;
 300:Core/Src/main.c ****             while (iteration < max_iterations) {
 301:Core/Src/main.c ****                 double xi_sq = xi * xi;
 302:Core/Src/main.c ****                 double yi_sq = yi * yi;
 303:Core/Src/main.c ****                 if (xi_sq + yi_sq > 4.0) {
 304:Core/Src/main.c ****                     break;
 305:Core/Src/main.c ****                 }
 306:Core/Src/main.c ****                 double temp = xi_sq - yi_sq;
 547              		.loc 1 306 17 is_stmt 1 view .LVU105
 548              		.loc 1 306 24 is_stmt 0 view .LVU106
 549 0020 029A     		ldr	r2, [sp, #8]
 550 0022 039B     		ldr	r3, [sp, #12]
 551 0024 0098     		ldr	r0, [sp]
 552 0026 0199     		ldr	r1, [sp, #4]
 553 0028 FFF7FEFF 		bl	__aeabi_dsub
 554              	.LVL32:
 555 002c 0090     		str	r0, [sp]
 556 002e 0191     		str	r1, [sp, #4]
 557              	.LVL33:
 307:Core/Src/main.c ****                 yi = (2.0 * xi * yi) + y0;
 558              		.loc 1 307 17 is_stmt 1 view .LVU107
 559              		.loc 1 307 27 is_stmt 0 view .LVU108
 560 0030 3200     		movs	r2, r6
 561 0032 3B00     		movs	r3, r7
 562 0034 3000     		movs	r0, r6
 563              	.LVL34:
 564              		.loc 1 307 27 view .LVU109
 565 0036 3900     		movs	r1, r7
 566 0038 FFF7FEFF 		bl	__aeabi_dadd
 567              	.LVL35:
 568              		.loc 1 307 32 view .LVU110
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s 			page 17


 569 003c 2200     		movs	r2, r4
 570 003e 2B00     		movs	r3, r5
 571 0040 FFF7FEFF 		bl	__aeabi_dmul
 572              	.LVL36:
 573              		.loc 1 307 20 view .LVU111
 574 0044 069A     		ldr	r2, [sp, #24]
 575 0046 079B     		ldr	r3, [sp, #28]
 576 0048 FFF7FEFF 		bl	__aeabi_dadd
 577              	.LVL37:
 578 004c 0400     		movs	r4, r0
 579              	.LVL38:
 580              		.loc 1 307 20 view .LVU112
 581 004e 0D00     		movs	r5, r1
 582              	.LVL39:
 308:Core/Src/main.c ****                 xi = temp + x0;
 583              		.loc 1 308 17 is_stmt 1 view .LVU113
 584              		.loc 1 308 20 is_stmt 0 view .LVU114
 585 0050 009A     		ldr	r2, [sp]
 586 0052 019B     		ldr	r3, [sp, #4]
 587 0054 0498     		ldr	r0, [sp, #16]
 588 0056 0599     		ldr	r1, [sp, #20]
 589 0058 FFF7FEFF 		bl	__aeabi_dadd
 590              	.LVL40:
 591 005c 0600     		movs	r6, r0
 592              	.LVL41:
 593              		.loc 1 308 20 view .LVU115
 594 005e 0F00     		movs	r7, r1
 595              	.LVL42:
 309:Core/Src/main.c ****                 iteration++;
 596              		.loc 1 309 17 is_stmt 1 view .LVU116
 597              		.loc 1 309 26 is_stmt 0 view .LVU117
 598 0060 0123     		movs	r3, #1
 599 0062 9C46     		mov	ip, r3
 600 0064 E044     		add	r8, r8, ip
 601              	.LVL43:
 602              	.L19:
 603              		.loc 1 309 26 view .LVU118
 604              	.LBE20:
 300:Core/Src/main.c ****                 double xi_sq = xi * xi;
 605              		.loc 1 300 30 is_stmt 1 view .LVU119
 606 0066 C845     		cmp	r8, r9
 607 0068 1BDA     		bge	.L20
 608              	.LBB21:
 301:Core/Src/main.c ****                 double yi_sq = yi * yi;
 609              		.loc 1 301 17 view .LVU120
 301:Core/Src/main.c ****                 double yi_sq = yi * yi;
 610              		.loc 1 301 24 is_stmt 0 view .LVU121
 611 006a 3200     		movs	r2, r6
 612 006c 3B00     		movs	r3, r7
 613 006e 3000     		movs	r0, r6
 614 0070 3900     		movs	r1, r7
 615 0072 FFF7FEFF 		bl	__aeabi_dmul
 616              	.LVL44:
 617 0076 0090     		str	r0, [sp]
 618 0078 0191     		str	r1, [sp, #4]
 619              	.LVL45:
 302:Core/Src/main.c ****                 if (xi_sq + yi_sq > 4.0) {
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s 			page 18


 620              		.loc 1 302 17 is_stmt 1 view .LVU122
 302:Core/Src/main.c ****                 if (xi_sq + yi_sq > 4.0) {
 621              		.loc 1 302 24 is_stmt 0 view .LVU123
 622 007a 2200     		movs	r2, r4
 623 007c 2B00     		movs	r3, r5
 624 007e 2000     		movs	r0, r4
 625              	.LVL46:
 302:Core/Src/main.c ****                 if (xi_sq + yi_sq > 4.0) {
 626              		.loc 1 302 24 view .LVU124
 627 0080 2900     		movs	r1, r5
 628 0082 FFF7FEFF 		bl	__aeabi_dmul
 629              	.LVL47:
 630 0086 0200     		movs	r2, r0
 631 0088 0B00     		movs	r3, r1
 632              	.LVL48:
 303:Core/Src/main.c ****                     break;
 633              		.loc 1 303 17 is_stmt 1 view .LVU125
 303:Core/Src/main.c ****                     break;
 634              		.loc 1 303 27 is_stmt 0 view .LVU126
 635 008a 0292     		str	r2, [sp, #8]
 636 008c 0393     		str	r3, [sp, #12]
 637 008e 0098     		ldr	r0, [sp]
 638 0090 0199     		ldr	r1, [sp, #4]
 639 0092 FFF7FEFF 		bl	__aeabi_dadd
 640              	.LVL49:
 303:Core/Src/main.c ****                     break;
 641              		.loc 1 303 20 view .LVU127
 642 0096 0022     		movs	r2, #0
 643 0098 304B     		ldr	r3, .L27
 644 009a FFF7FEFF 		bl	__aeabi_dcmpgt
 645              	.LVL50:
 646 009e 0028     		cmp	r0, #0
 647 00a0 BED0     		beq	.L24
 648              	.LVL51:
 649              	.L20:
 303:Core/Src/main.c ****                     break;
 650              		.loc 1 303 20 view .LVU128
 651              	.LBE21:
 310:Core/Src/main.c ****             }
 311:Core/Src/main.c ****             mandelbrot_sum += (uint64_t)iteration;
 652              		.loc 1 311 31 view .LVU129
 653 00a2 4346     		mov	r3, r8
 654              		.loc 1 311 13 is_stmt 1 view .LVU130
 655              		.loc 1 311 31 is_stmt 0 view .LVU131
 656 00a4 0893     		str	r3, [sp, #32]
 657 00a6 DB17     		asrs	r3, r3, #31
 658 00a8 0993     		str	r3, [sp, #36]
 659              		.loc 1 311 28 view .LVU132
 660 00aa 0A9B     		ldr	r3, [sp, #40]
 661 00ac 0B9C     		ldr	r4, [sp, #44]
 662 00ae 0899     		ldr	r1, [sp, #32]
 663 00b0 099A     		ldr	r2, [sp, #36]
 664 00b2 5B18     		adds	r3, r3, r1
 665 00b4 5441     		adcs	r4, r4, r2
 666 00b6 0A93     		str	r3, [sp, #40]
 667 00b8 0B94     		str	r4, [sp, #44]
 668              	.LVL52:
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s 			page 19


 669              		.loc 1 311 28 view .LVU133
 670              	.LBE19:
 295:Core/Src/main.c ****             double x0 = ((double)x / (double)width) * 3.5 - 2.5;
 671              		.loc 1 295 37 is_stmt 1 discriminator 2 view .LVU134
 672 00ba 0C9B     		ldr	r3, [sp, #48]
 673              	.LVL53:
 295:Core/Src/main.c ****             double x0 = ((double)x / (double)width) * 3.5 - 2.5;
 674              		.loc 1 295 37 is_stmt 0 discriminator 2 view .LVU135
 675 00bc 0133     		adds	r3, r3, #1
 676 00be 0C93     		str	r3, [sp, #48]
 677              	.LVL54:
 678              	.L18:
 295:Core/Src/main.c ****             double x0 = ((double)x / (double)width) * 3.5 - 2.5;
 679              		.loc 1 295 27 is_stmt 1 discriminator 1 view .LVU136
 680 00c0 0C9B     		ldr	r3, [sp, #48]
 681 00c2 5B45     		cmp	r3, fp
 682 00c4 1EDA     		bge	.L25
 683              	.LBB22:
 296:Core/Src/main.c ****             double xi = 0.0;
 684              		.loc 1 296 13 view .LVU137
 296:Core/Src/main.c ****             double xi = 0.0;
 685              		.loc 1 296 26 is_stmt 0 view .LVU138
 686 00c6 0C98     		ldr	r0, [sp, #48]
 687 00c8 FFF7FEFF 		bl	__aeabi_i2d
 688              	.LVL55:
 689 00cc 0400     		movs	r4, r0
 690 00ce 0D00     		movs	r5, r1
 296:Core/Src/main.c ****             double xi = 0.0;
 691              		.loc 1 296 38 view .LVU139
 692 00d0 5846     		mov	r0, fp
 693 00d2 FFF7FEFF 		bl	__aeabi_i2d
 694              	.LVL56:
 695 00d6 0200     		movs	r2, r0
 696 00d8 0B00     		movs	r3, r1
 296:Core/Src/main.c ****             double xi = 0.0;
 697              		.loc 1 296 36 view .LVU140
 698 00da 2000     		movs	r0, r4
 699 00dc 2900     		movs	r1, r5
 700 00de FFF7FEFF 		bl	__aeabi_ddiv
 701              	.LVL57:
 296:Core/Src/main.c ****             double xi = 0.0;
 702              		.loc 1 296 53 view .LVU141
 703 00e2 0022     		movs	r2, #0
 704 00e4 1E4B     		ldr	r3, .L27+4
 705 00e6 FFF7FEFF 		bl	__aeabi_dmul
 706              	.LVL58:
 296:Core/Src/main.c ****             double xi = 0.0;
 707              		.loc 1 296 20 view .LVU142
 708 00ea 0022     		movs	r2, #0
 709 00ec 1D4B     		ldr	r3, .L27+8
 710 00ee FFF7FEFF 		bl	__aeabi_dsub
 711              	.LVL59:
 712 00f2 0490     		str	r0, [sp, #16]
 713 00f4 0591     		str	r1, [sp, #20]
 714              	.LVL60:
 297:Core/Src/main.c ****             double yi = 0.0;
 715              		.loc 1 297 13 is_stmt 1 view .LVU143
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s 			page 20


 298:Core/Src/main.c ****             int iteration = 0;
 716              		.loc 1 298 13 view .LVU144
 299:Core/Src/main.c ****             while (iteration < max_iterations) {
 717              		.loc 1 299 13 view .LVU145
 300:Core/Src/main.c ****                 double xi_sq = xi * xi;
 718              		.loc 1 300 13 view .LVU146
 299:Core/Src/main.c ****             while (iteration < max_iterations) {
 719              		.loc 1 299 17 is_stmt 0 view .LVU147
 720 00f6 0023     		movs	r3, #0
 298:Core/Src/main.c ****             int iteration = 0;
 721              		.loc 1 298 20 view .LVU148
 722 00f8 0024     		movs	r4, #0
 723 00fa 0025     		movs	r5, #0
 297:Core/Src/main.c ****             double yi = 0.0;
 724              		.loc 1 297 20 view .LVU149
 725 00fc 2600     		movs	r6, r4
 726 00fe 2F00     		movs	r7, r5
 727 0100 9846     		mov	r8, r3
 300:Core/Src/main.c ****                 double xi_sq = xi * xi;
 728              		.loc 1 300 19 view .LVU150
 729 0102 B0E7     		b	.L19
 730              	.LVL61:
 731              	.L25:
 300:Core/Src/main.c ****                 double xi_sq = xi * xi;
 732              		.loc 1 300 19 view .LVU151
 733              	.LBE22:
 734              	.LBE18:
 735              	.LBE17:
 293:Core/Src/main.c ****         double y0 = ((double)y / (double)height) * 2.0 - 1.0;
 736              		.loc 1 293 34 discriminator 2 view .LVU152
 737 0104 0D9E     		ldr	r6, [sp, #52]
 738 0106 5746     		mov	r7, r10
 293:Core/Src/main.c ****         double y0 = ((double)y / (double)height) * 2.0 - 1.0;
 739              		.loc 1 293 34 is_stmt 1 discriminator 2 view .LVU153
 740 0108 0136     		adds	r6, r6, #1
 741              	.LVL62:
 742              	.L17:
 293:Core/Src/main.c ****         double y0 = ((double)y / (double)height) * 2.0 - 1.0;
 743              		.loc 1 293 23 discriminator 1 view .LVU154
 744 010a BE42     		cmp	r6, r7
 745 010c 1CDA     		bge	.L26
 746              	.LBB24:
 294:Core/Src/main.c ****         for (int x = 0; x < width; x++) {
 747              		.loc 1 294 9 view .LVU155
 294:Core/Src/main.c ****         for (int x = 0; x < width; x++) {
 748              		.loc 1 294 22 is_stmt 0 view .LVU156
 749 010e 3000     		movs	r0, r6
 750 0110 FFF7FEFF 		bl	__aeabi_i2d
 751              	.LVL63:
 752 0114 0400     		movs	r4, r0
 753 0116 0D00     		movs	r5, r1
 294:Core/Src/main.c ****         for (int x = 0; x < width; x++) {
 754              		.loc 1 294 34 view .LVU157
 755 0118 3800     		movs	r0, r7
 756 011a FFF7FEFF 		bl	__aeabi_i2d
 757              	.LVL64:
 758 011e 0200     		movs	r2, r0
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s 			page 21


 759 0120 0B00     		movs	r3, r1
 294:Core/Src/main.c ****         for (int x = 0; x < width; x++) {
 760              		.loc 1 294 32 view .LVU158
 761 0122 2000     		movs	r0, r4
 762 0124 2900     		movs	r1, r5
 763 0126 FFF7FEFF 		bl	__aeabi_ddiv
 764              	.LVL65:
 294:Core/Src/main.c ****         for (int x = 0; x < width; x++) {
 765              		.loc 1 294 50 view .LVU159
 766 012a 0200     		movs	r2, r0
 767 012c 0B00     		movs	r3, r1
 768 012e FFF7FEFF 		bl	__aeabi_dadd
 769              	.LVL66:
 294:Core/Src/main.c ****         for (int x = 0; x < width; x++) {
 770              		.loc 1 294 16 view .LVU160
 771 0132 0022     		movs	r2, #0
 772 0134 0C4B     		ldr	r3, .L27+12
 773 0136 FFF7FEFF 		bl	__aeabi_dsub
 774              	.LVL67:
 775 013a 0690     		str	r0, [sp, #24]
 776 013c 0791     		str	r1, [sp, #28]
 777              	.LVL68:
 295:Core/Src/main.c ****             double x0 = ((double)x / (double)width) * 3.5 - 2.5;
 778              		.loc 1 295 9 is_stmt 1 view .LVU161
 779              	.LBB23:
 295:Core/Src/main.c ****             double x0 = ((double)x / (double)width) * 3.5 - 2.5;
 780              		.loc 1 295 14 view .LVU162
 295:Core/Src/main.c ****             double x0 = ((double)x / (double)width) * 3.5 - 2.5;
 781              		.loc 1 295 18 is_stmt 0 view .LVU163
 782 013e 0023     		movs	r3, #0
 783 0140 0D96     		str	r6, [sp, #52]
 784 0142 0C93     		str	r3, [sp, #48]
 785 0144 BA46     		mov	r10, r7
 295:Core/Src/main.c ****             double x0 = ((double)x / (double)width) * 3.5 - 2.5;
 786              		.loc 1 295 9 view .LVU164
 787 0146 BBE7     		b	.L18
 788              	.LVL69:
 789              	.L26:
 295:Core/Src/main.c ****             double x0 = ((double)x / (double)width) * 3.5 - 2.5;
 790              		.loc 1 295 9 view .LVU165
 791              	.LBE23:
 792              	.LBE24:
 793              	.LBE25:
 312:Core/Src/main.c ****         }
 313:Core/Src/main.c ****     }
 314:Core/Src/main.c ****     return mandelbrot_sum;
 794              		.loc 1 314 5 is_stmt 1 view .LVU166
 315:Core/Src/main.c **** }
 795              		.loc 1 315 1 is_stmt 0 view .LVU167
 796 0148 0A98     		ldr	r0, [sp, #40]
 797 014a 0B99     		ldr	r1, [sp, #44]
 798 014c 0FB0     		add	sp, sp, #60
 799              		@ sp needed
 800              	.LVL70:
 801              	.LVL71:
 802              	.LVL72:
 803              	.LVL73:
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s 			page 22


 804              		.loc 1 315 1 view .LVU168
 805 014e F0BC     		pop	{r4, r5, r6, r7}
 806 0150 BB46     		mov	fp, r7
 807 0152 B246     		mov	r10, r6
 808 0154 A946     		mov	r9, r5
 809 0156 A046     		mov	r8, r4
 810 0158 F0BD     		pop	{r4, r5, r6, r7, pc}
 811              	.L28:
 812 015a C046     		.align	2
 813              	.L27:
 814 015c 00001040 		.word	1074790400
 815 0160 00000C40 		.word	1074528256
 816 0164 00000440 		.word	1074003968
 817 0168 0000F03F 		.word	1072693248
 818              		.cfi_endproc
 819              	.LFE45:
 821              		.section	.text.run_benchmarks_for_all_dimensions,"ax",%progbits
 822              		.align	1
 823              		.syntax unified
 824              		.code	16
 825              		.thumb_func
 827              	run_benchmarks_for_all_dimensions:
 828              	.LFB43:
 221:Core/Src/main.c ****   for (int i = 0; i < 5; i++) {
 829              		.loc 1 221 1 is_stmt 1 view -0
 830              		.cfi_startproc
 831              		@ args = 0, pretend = 0, frame = 0
 832              		@ frame_needed = 0, uses_anonymous_args = 0
 833 0000 10B5     		push	{r4, lr}
 834              	.LCFI8:
 835              		.cfi_def_cfa_offset 8
 836              		.cfi_offset 4, -8
 837              		.cfi_offset 14, -4
 222:Core/Src/main.c ****     // Update selected size and expose width/height
 838              		.loc 1 222 3 view .LVU170
 839              	.LBB26:
 222:Core/Src/main.c ****     // Update selected size and expose width/height
 840              		.loc 1 222 8 view .LVU171
 841              	.LVL74:
 222:Core/Src/main.c ****     // Update selected size and expose width/height
 842              		.loc 1 222 12 is_stmt 0 view .LVU172
 843 0002 0024     		movs	r4, #0
 222:Core/Src/main.c ****     // Update selected size and expose width/height
 844              		.loc 1 222 3 view .LVU173
 845 0004 1AE0     		b	.L30
 846              	.LVL75:
 847              	.L31:
 235:Core/Src/main.c ****     }
 848              		.loc 1 235 7 is_stmt 1 view .LVU174
 235:Core/Src/main.c ****     }
 849              		.loc 1 235 18 is_stmt 0 view .LVU175
 850 0006 2C4B     		ldr	r3, .L37
 851 0008 1868     		ldr	r0, [r3]
 852 000a 2C4B     		ldr	r3, .L37+4
 853 000c 1968     		ldr	r1, [r3]
 854 000e 6422     		movs	r2, #100
 855 0010 FFF7FEFF 		bl	calculate_mandelbrot_fixed_point_arithmetic
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s 			page 23


 856              	.LVL76:
 857 0014 0200     		movs	r2, r0
 858 0016 0B00     		movs	r3, r1
 235:Core/Src/main.c ****     }
 859              		.loc 1 235 16 discriminator 1 view .LVU176
 860 0018 2949     		ldr	r1, .L37+8
 861 001a 0A60     		str	r2, [r1]
 862 001c 4B60     		str	r3, [r1, #4]
 863 001e 2DE0     		b	.L32
 864              	.L33:
 247:Core/Src/main.c ****       execution_time_ms_fixed[i] = execution_time;
 865              		.loc 1 247 7 is_stmt 1 view .LVU177
 247:Core/Src/main.c ****       execution_time_ms_fixed[i] = execution_time;
 866              		.loc 1 247 25 is_stmt 0 view .LVU178
 867 0020 274B     		ldr	r3, .L37+8
 868 0022 1868     		ldr	r0, [r3]
 869 0024 5968     		ldr	r1, [r3, #4]
 870 0026 274B     		ldr	r3, .L37+12
 871 0028 E200     		lsls	r2, r4, #3
 872 002a 9B18     		adds	r3, r3, r2
 873 002c 1860     		str	r0, [r3]
 874 002e 5960     		str	r1, [r3, #4]
 248:Core/Src/main.c ****     }
 875              		.loc 1 248 7 is_stmt 1 view .LVU179
 248:Core/Src/main.c ****     }
 876              		.loc 1 248 34 is_stmt 0 view .LVU180
 877 0030 254B     		ldr	r3, .L37+16
 878 0032 1968     		ldr	r1, [r3]
 879 0034 254B     		ldr	r3, .L37+20
 880 0036 A200     		lsls	r2, r4, #2
 881 0038 D150     		str	r1, [r2, r3]
 882              	.L34:
 222:Core/Src/main.c ****     // Update selected size and expose width/height
 883              		.loc 1 222 27 is_stmt 1 discriminator 2 view .LVU181
 884 003a 0134     		adds	r4, r4, #1
 885              	.LVL77:
 886              	.L30:
 222:Core/Src/main.c ****     // Update selected size and expose width/height
 887              		.loc 1 222 21 discriminator 1 view .LVU182
 888 003c 042C     		cmp	r4, #4
 889 003e 39DC     		bgt	.L36
 224:Core/Src/main.c ****     width = image_dimensions[i];
 890              		.loc 1 224 5 view .LVU183
 224:Core/Src/main.c ****     width = image_dimensions[i];
 891              		.loc 1 224 16 is_stmt 0 view .LVU184
 892 0040 234B     		ldr	r3, .L37+24
 893 0042 1C60     		str	r4, [r3]
 225:Core/Src/main.c ****     height = image_dimensions[i];
 894              		.loc 1 225 5 is_stmt 1 view .LVU185
 225:Core/Src/main.c ****     height = image_dimensions[i];
 895              		.loc 1 225 29 is_stmt 0 view .LVU186
 896 0044 234B     		ldr	r3, .L37+28
 897 0046 A200     		lsls	r2, r4, #2
 898 0048 D058     		ldr	r0, [r2, r3]
 225:Core/Src/main.c ****     height = image_dimensions[i];
 899              		.loc 1 225 11 view .LVU187
 900 004a 1B49     		ldr	r1, .L37
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s 			page 24


 901 004c 0860     		str	r0, [r1]
 226:Core/Src/main.c **** 
 902              		.loc 1 226 5 is_stmt 1 view .LVU188
 226:Core/Src/main.c **** 
 903              		.loc 1 226 30 is_stmt 0 view .LVU189
 904 004e D258     		ldr	r2, [r2, r3]
 226:Core/Src/main.c **** 
 905              		.loc 1 226 12 view .LVU190
 906 0050 1A4B     		ldr	r3, .L37+4
 907 0052 1A60     		str	r2, [r3]
 229:Core/Src/main.c **** 
 908              		.loc 1 229 5 is_stmt 1 view .LVU191
 229:Core/Src/main.c **** 
 909              		.loc 1 229 18 is_stmt 0 view .LVU192
 910 0054 FFF7FEFF 		bl	HAL_GetTick
 911              	.LVL78:
 229:Core/Src/main.c **** 
 912              		.loc 1 229 16 discriminator 1 view .LVU193
 913 0058 1F4B     		ldr	r3, .L37+32
 914 005a 1860     		str	r0, [r3]
 232:Core/Src/main.c ****       checksum = calculate_mandelbrot_double(width, height, MAX_ITER);
 915              		.loc 1 232 5 is_stmt 1 view .LVU194
 232:Core/Src/main.c ****       checksum = calculate_mandelbrot_double(width, height, MAX_ITER);
 916              		.loc 1 232 9 is_stmt 0 view .LVU195
 917 005c 1F4B     		ldr	r3, .L37+36
 918 005e 1B68     		ldr	r3, [r3]
 232:Core/Src/main.c ****       checksum = calculate_mandelbrot_double(width, height, MAX_ITER);
 919              		.loc 1 232 8 view .LVU196
 920 0060 002B     		cmp	r3, #0
 921 0062 D0D0     		beq	.L31
 233:Core/Src/main.c ****     } else {
 922              		.loc 1 233 7 is_stmt 1 view .LVU197
 233:Core/Src/main.c ****     } else {
 923              		.loc 1 233 18 is_stmt 0 view .LVU198
 924 0064 144B     		ldr	r3, .L37
 925 0066 1868     		ldr	r0, [r3]
 926 0068 144B     		ldr	r3, .L37+4
 927 006a 1968     		ldr	r1, [r3]
 928 006c 6422     		movs	r2, #100
 929 006e FFF7FEFF 		bl	calculate_mandelbrot_double
 930              	.LVL79:
 931 0072 0200     		movs	r2, r0
 932 0074 0B00     		movs	r3, r1
 233:Core/Src/main.c ****     } else {
 933              		.loc 1 233 16 discriminator 1 view .LVU199
 934 0076 1249     		ldr	r1, .L37+8
 935 0078 0A60     		str	r2, [r1]
 936 007a 4B60     		str	r3, [r1, #4]
 937              	.L32:
 239:Core/Src/main.c ****     execution_time = end_time - start_time;
 938              		.loc 1 239 5 is_stmt 1 view .LVU200
 239:Core/Src/main.c ****     execution_time = end_time - start_time;
 939              		.loc 1 239 16 is_stmt 0 view .LVU201
 940 007c FFF7FEFF 		bl	HAL_GetTick
 941              	.LVL80:
 239:Core/Src/main.c ****     execution_time = end_time - start_time;
 942              		.loc 1 239 14 discriminator 1 view .LVU202
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s 			page 25


 943 0080 174B     		ldr	r3, .L37+40
 944 0082 1860     		str	r0, [r3]
 240:Core/Src/main.c **** 
 945              		.loc 1 240 5 is_stmt 1 view .LVU203
 240:Core/Src/main.c **** 
 946              		.loc 1 240 31 is_stmt 0 view .LVU204
 947 0084 1B68     		ldr	r3, [r3]
 948 0086 144A     		ldr	r2, .L37+32
 949 0088 1268     		ldr	r2, [r2]
 950 008a 9B1A     		subs	r3, r3, r2
 240:Core/Src/main.c **** 
 951              		.loc 1 240 20 view .LVU205
 952 008c 0E4A     		ldr	r2, .L37+16
 953 008e 1360     		str	r3, [r2]
 243:Core/Src/main.c ****       checksum_double[i] = checksum;
 954              		.loc 1 243 5 is_stmt 1 view .LVU206
 243:Core/Src/main.c ****       checksum_double[i] = checksum;
 955              		.loc 1 243 9 is_stmt 0 view .LVU207
 956 0090 124B     		ldr	r3, .L37+36
 957 0092 1B68     		ldr	r3, [r3]
 243:Core/Src/main.c ****       checksum_double[i] = checksum;
 958              		.loc 1 243 8 view .LVU208
 959 0094 002B     		cmp	r3, #0
 960 0096 C3D0     		beq	.L33
 244:Core/Src/main.c ****       execution_time_ms_double[i] = execution_time;
 961              		.loc 1 244 7 is_stmt 1 view .LVU209
 244:Core/Src/main.c ****       execution_time_ms_double[i] = execution_time;
 962              		.loc 1 244 26 is_stmt 0 view .LVU210
 963 0098 094B     		ldr	r3, .L37+8
 964 009a 1868     		ldr	r0, [r3]
 965 009c 5968     		ldr	r1, [r3, #4]
 966 009e 114B     		ldr	r3, .L37+44
 967 00a0 E200     		lsls	r2, r4, #3
 968 00a2 9B18     		adds	r3, r3, r2
 969 00a4 1860     		str	r0, [r3]
 970 00a6 5960     		str	r1, [r3, #4]
 245:Core/Src/main.c ****     } else {
 971              		.loc 1 245 7 is_stmt 1 view .LVU211
 245:Core/Src/main.c ****     } else {
 972              		.loc 1 245 35 is_stmt 0 view .LVU212
 973 00a8 074B     		ldr	r3, .L37+16
 974 00aa 1968     		ldr	r1, [r3]
 975 00ac 0E4B     		ldr	r3, .L37+48
 976 00ae A200     		lsls	r2, r4, #2
 977 00b0 D150     		str	r1, [r2, r3]
 978 00b2 C2E7     		b	.L34
 979              	.L36:
 245:Core/Src/main.c ****     } else {
 980              		.loc 1 245 35 view .LVU213
 981              	.LBE26:
 251:Core/Src/main.c **** 
 982              		.loc 1 251 1 view .LVU214
 983              		@ sp needed
 984              	.LVL81:
 251:Core/Src/main.c **** 
 985              		.loc 1 251 1 view .LVU215
 986 00b4 10BD     		pop	{r4, pc}
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s 			page 26


 987              	.L38:
 988 00b6 C046     		.align	2
 989              	.L37:
 990 00b8 00000000 		.word	width
 991 00bc 00000000 		.word	height
 992 00c0 00000000 		.word	checksum
 993 00c4 00000000 		.word	checksum_fixed
 994 00c8 00000000 		.word	execution_time
 995 00cc 00000000 		.word	execution_time_ms_fixed
 996 00d0 00000000 		.word	size_index
 997 00d4 00000000 		.word	image_dimensions
 998 00d8 00000000 		.word	start_time
 999 00dc 00000000 		.word	use_double
 1000 00e0 00000000 		.word	end_time
 1001 00e4 00000000 		.word	checksum_double
 1002 00e8 00000000 		.word	execution_time_ms_double
 1003              		.cfi_endproc
 1004              	.LFE43:
 1006              		.section	.text.Error_Handler,"ax",%progbits
 1007              		.align	1
 1008              		.global	Error_Handler
 1009              		.syntax unified
 1010              		.code	16
 1011              		.thumb_func
 1013              	Error_Handler:
 1014              	.LFB46:
 316:Core/Src/main.c **** 
 317:Core/Src/main.c **** /* USER CODE END 4 */
 318:Core/Src/main.c **** 
 319:Core/Src/main.c **** /**
 320:Core/Src/main.c ****   * @brief  This function is executed in case of error occurrence.
 321:Core/Src/main.c ****   * @retval None
 322:Core/Src/main.c ****   */
 323:Core/Src/main.c **** void Error_Handler(void)
 324:Core/Src/main.c **** {
 1015              		.loc 1 324 1 is_stmt 1 view -0
 1016              		.cfi_startproc
 1017              		@ Volatile: function does not return.
 1018              		@ args = 0, pretend = 0, frame = 0
 1019              		@ frame_needed = 0, uses_anonymous_args = 0
 1020              		@ link register save eliminated.
 325:Core/Src/main.c ****   /* USER CODE BEGIN Error_Handler_Debug */
 326:Core/Src/main.c ****   /* User can add his own implementation to report the HAL error return state */
 327:Core/Src/main.c ****   __disable_irq();
 1021              		.loc 1 327 3 view .LVU217
 1022              	.LBB27:
 1023              	.LBI27:
 1024              		.file 2 "Drivers/CMSIS/Include/cmsis_gcc.h"
   1:Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS compiler GCC header file
   4:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V5.0.4
   5:Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     09. April 2018
   6:Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:Drivers/CMSIS/Include/cmsis_gcc.h **** /*
   8:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Copyright (c) 2009-2018 Arm Limited. All rights reserved.
   9:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s 			page 27


  10:Drivers/CMSIS/Include/cmsis_gcc.h ****  * SPDX-License-Identifier: Apache-2.0
  11:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  12:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Licensed under the Apache License, Version 2.0 (the License); you may
  13:Drivers/CMSIS/Include/cmsis_gcc.h ****  * not use this file except in compliance with the License.
  14:Drivers/CMSIS/Include/cmsis_gcc.h ****  * You may obtain a copy of the License at
  15:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  16:Drivers/CMSIS/Include/cmsis_gcc.h ****  * www.apache.org/licenses/LICENSE-2.0
  17:Drivers/CMSIS/Include/cmsis_gcc.h ****  *
  18:Drivers/CMSIS/Include/cmsis_gcc.h ****  * Unless required by applicable law or agreed to in writing, software
  19:Drivers/CMSIS/Include/cmsis_gcc.h ****  * distributed under the License is distributed on an AS IS BASIS, WITHOUT
  20:Drivers/CMSIS/Include/cmsis_gcc.h ****  * WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  21:Drivers/CMSIS/Include/cmsis_gcc.h ****  * See the License for the specific language governing permissions and
  22:Drivers/CMSIS/Include/cmsis_gcc.h ****  * limitations under the License.
  23:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  24:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  25:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  26:Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  27:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  28:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  29:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  30:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  31:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  32:Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  33:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:Drivers/CMSIS/Include/cmsis_gcc.h **** /* Fallback for __has_builtin */
  35:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __has_builtin
  36:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __has_builtin(x) (0)
  37:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  38:Drivers/CMSIS/Include/cmsis_gcc.h **** 
  39:Drivers/CMSIS/Include/cmsis_gcc.h **** /* CMSIS compiler specific defines */
  40:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ASM
  41:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ASM                                  __asm
  42:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  43:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __INLINE
  44:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __INLINE                               inline
  45:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  46:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_INLINE
  47:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_INLINE                        static inline
  48:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  49:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __STATIC_FORCEINLINE                 
  50:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __STATIC_FORCEINLINE                   __attribute__((always_inline)) static inline
  51:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif                                           
  52:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __NO_RETURN
  53:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __NO_RETURN                            __attribute__((__noreturn__))
  54:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  55:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __USED
  56:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __USED                                 __attribute__((used))
  57:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  58:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __WEAK
  59:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __WEAK                                 __attribute__((weak))
  60:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  61:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED
  62:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED                               __attribute__((packed, aligned(1)))
  63:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  64:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_STRUCT
  65:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_STRUCT                        struct __attribute__((packed, aligned(1)))
  66:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s 			page 28


  67:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __PACKED_UNION
  68:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __PACKED_UNION                         union __attribute__((packed, aligned(1)))
  69:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  70:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32        /* deprecated */
  71:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  72:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  73:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  74:Drivers/CMSIS/Include/cmsis_gcc.h ****   struct __attribute__((packed)) T_UINT32 { uint32_t v; };
  75:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  76:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32(x)                  (((struct T_UINT32 *)(x))->v)
  77:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  78:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_WRITE
  79:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  80:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  81:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  82:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_WRITE { uint16_t v; };
  83:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  84:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_WRITE(addr, val)    (void)((((struct T_UINT16_WRITE *)(void *)(addr))-
  85:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  86:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT16_READ
  87:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  88:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  89:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  90:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT16_READ { uint16_t v; };
  91:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
  92:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT16_READ(addr)          (((const struct T_UINT16_READ *)(const void *)(add
  93:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  94:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_WRITE
  95:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
  96:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
  97:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
  98:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_WRITE { uint32_t v; };
  99:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 100:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_WRITE(addr, val)    (void)((((struct T_UINT32_WRITE *)(void *)(addr))-
 101:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 102:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __UNALIGNED_UINT32_READ
 103:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic push
 104:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wpacked"
 105:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic ignored "-Wattributes"
 106:Drivers/CMSIS/Include/cmsis_gcc.h ****   __PACKED_STRUCT T_UINT32_READ { uint32_t v; };
 107:Drivers/CMSIS/Include/cmsis_gcc.h ****   #pragma GCC diagnostic pop
 108:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __UNALIGNED_UINT32_READ(addr)          (((const struct T_UINT32_READ *)(const void *)(add
 109:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 110:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __ALIGNED
 111:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __ALIGNED(x)                           __attribute__((aligned(x)))
 112:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 113:Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef   __RESTRICT
 114:Drivers/CMSIS/Include/cmsis_gcc.h ****   #define __RESTRICT                             __restrict
 115:Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 116:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 117:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 118:Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
 119:Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
 120:Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
 121:Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 122:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 123:Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s 			page 29


 124:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 125:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
 126:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
 127:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 128:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 129:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __enable_irq(void)
 130:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 131:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
 132:Drivers/CMSIS/Include/cmsis_gcc.h **** }
 133:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 134:Drivers/CMSIS/Include/cmsis_gcc.h **** 
 135:Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 136:Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
 137:Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
 138:Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 139:Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 140:Drivers/CMSIS/Include/cmsis_gcc.h **** __STATIC_FORCEINLINE void __disable_irq(void)
 1025              		.loc 2 140 27 view .LVU218
 1026              	.LBB28:
 141:Drivers/CMSIS/Include/cmsis_gcc.h **** {
 142:Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
 1027              		.loc 2 142 3 view .LVU219
 1028              		.syntax divided
 1029              	@ 142 "Drivers/CMSIS/Include/cmsis_gcc.h" 1
 1030 0000 72B6     		cpsid i
 1031              	@ 0 "" 2
 1032              		.thumb
 1033              		.syntax unified
 1034              	.L40:
 1035              	.LBE28:
 1036              	.LBE27:
 328:Core/Src/main.c ****   while (1)
 1037              		.loc 1 328 3 view .LVU220
 329:Core/Src/main.c ****   {
 330:Core/Src/main.c ****   }
 1038              		.loc 1 330 3 view .LVU221
 328:Core/Src/main.c ****   while (1)
 1039              		.loc 1 328 9 view .LVU222
 1040 0002 FEE7     		b	.L40
 1041              		.cfi_endproc
 1042              	.LFE46:
 1044              		.section	.text.SystemClock_Config,"ax",%progbits
 1045              		.align	1
 1046              		.global	SystemClock_Config
 1047              		.syntax unified
 1048              		.code	16
 1049              		.thumb_func
 1051              	SystemClock_Config:
 1052              	.LFB41:
 160:Core/Src/main.c ****   RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 1053              		.loc 1 160 1 view -0
 1054              		.cfi_startproc
 1055              		@ args = 0, pretend = 0, frame = 64
 1056              		@ frame_needed = 0, uses_anonymous_args = 0
 1057 0000 00B5     		push	{lr}
 1058              	.LCFI9:
 1059              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s 			page 30


 1060              		.cfi_offset 14, -4
 1061 0002 91B0     		sub	sp, sp, #68
 1062              	.LCFI10:
 1063              		.cfi_def_cfa_offset 72
 161:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1064              		.loc 1 161 3 view .LVU224
 161:Core/Src/main.c ****   RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 1065              		.loc 1 161 22 is_stmt 0 view .LVU225
 1066 0004 3022     		movs	r2, #48
 1067 0006 0021     		movs	r1, #0
 1068 0008 04A8     		add	r0, sp, #16
 1069 000a FFF7FEFF 		bl	memset
 1070              	.LVL82:
 162:Core/Src/main.c **** 
 1071              		.loc 1 162 3 is_stmt 1 view .LVU226
 162:Core/Src/main.c **** 
 1072              		.loc 1 162 22 is_stmt 0 view .LVU227
 1073 000e 1022     		movs	r2, #16
 1074 0010 0021     		movs	r1, #0
 1075 0012 6846     		mov	r0, sp
 1076 0014 FFF7FEFF 		bl	memset
 1077              	.LVL83:
 167:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1078              		.loc 1 167 3 is_stmt 1 view .LVU228
 167:Core/Src/main.c ****   RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 1079              		.loc 1 167 36 is_stmt 0 view .LVU229
 1080 0018 0223     		movs	r3, #2
 1081 001a 0493     		str	r3, [sp, #16]
 168:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1082              		.loc 1 168 3 is_stmt 1 view .LVU230
 168:Core/Src/main.c ****   RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 1083              		.loc 1 168 30 is_stmt 0 view .LVU231
 1084 001c 013B     		subs	r3, r3, #1
 1085 001e 0793     		str	r3, [sp, #28]
 169:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1086              		.loc 1 169 3 is_stmt 1 view .LVU232
 169:Core/Src/main.c ****   RCC_OscInitStruct.PLL.PLLState = RCC_PLL_NONE;
 1087              		.loc 1 169 41 is_stmt 0 view .LVU233
 1088 0020 0F33     		adds	r3, r3, #15
 1089 0022 0893     		str	r3, [sp, #32]
 170:Core/Src/main.c ****   if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 1090              		.loc 1 170 3 is_stmt 1 view .LVU234
 171:Core/Src/main.c ****   {
 1091              		.loc 1 171 3 view .LVU235
 171:Core/Src/main.c ****   {
 1092              		.loc 1 171 7 is_stmt 0 view .LVU236
 1093 0024 04A8     		add	r0, sp, #16
 1094 0026 FFF7FEFF 		bl	HAL_RCC_OscConfig
 1095              	.LVL84:
 171:Core/Src/main.c ****   {
 1096              		.loc 1 171 6 discriminator 1 view .LVU237
 1097 002a 0028     		cmp	r0, #0
 1098 002c 0DD1     		bne	.L44
 178:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 1099              		.loc 1 178 3 is_stmt 1 view .LVU238
 178:Core/Src/main.c ****                               |RCC_CLOCKTYPE_PCLK1;
 1100              		.loc 1 178 31 is_stmt 0 view .LVU239
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s 			page 31


 1101 002e 0723     		movs	r3, #7
 1102 0030 0093     		str	r3, [sp]
 180:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1103              		.loc 1 180 3 is_stmt 1 view .LVU240
 180:Core/Src/main.c ****   RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 1104              		.loc 1 180 34 is_stmt 0 view .LVU241
 1105 0032 0023     		movs	r3, #0
 1106 0034 0193     		str	r3, [sp, #4]
 181:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1107              		.loc 1 181 3 is_stmt 1 view .LVU242
 181:Core/Src/main.c ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV1;
 1108              		.loc 1 181 35 is_stmt 0 view .LVU243
 1109 0036 0293     		str	r3, [sp, #8]
 182:Core/Src/main.c **** 
 1110              		.loc 1 182 3 is_stmt 1 view .LVU244
 182:Core/Src/main.c **** 
 1111              		.loc 1 182 36 is_stmt 0 view .LVU245
 1112 0038 0393     		str	r3, [sp, #12]
 184:Core/Src/main.c ****   {
 1113              		.loc 1 184 3 is_stmt 1 view .LVU246
 184:Core/Src/main.c ****   {
 1114              		.loc 1 184 7 is_stmt 0 view .LVU247
 1115 003a 0021     		movs	r1, #0
 1116 003c 6846     		mov	r0, sp
 1117 003e FFF7FEFF 		bl	HAL_RCC_ClockConfig
 1118              	.LVL85:
 184:Core/Src/main.c ****   {
 1119              		.loc 1 184 6 discriminator 1 view .LVU248
 1120 0042 0028     		cmp	r0, #0
 1121 0044 03D1     		bne	.L45
 188:Core/Src/main.c **** 
 1122              		.loc 1 188 1 view .LVU249
 1123 0046 11B0     		add	sp, sp, #68
 1124              		@ sp needed
 1125 0048 00BD     		pop	{pc}
 1126              	.L44:
 173:Core/Src/main.c ****   }
 1127              		.loc 1 173 5 is_stmt 1 view .LVU250
 1128 004a FFF7FEFF 		bl	Error_Handler
 1129              	.LVL86:
 1130              	.L45:
 186:Core/Src/main.c ****   }
 1131              		.loc 1 186 5 view .LVU251
 1132 004e FFF7FEFF 		bl	Error_Handler
 1133              	.LVL87:
 1134              		.cfi_endproc
 1135              	.LFE41:
 1137              		.section	.text.main,"ax",%progbits
 1138              		.align	1
 1139              		.global	main
 1140              		.syntax unified
 1141              		.code	16
 1142              		.thumb_func
 1144              	main:
 1145              	.LFB40:
 103:Core/Src/main.c ****   /* USER CODE BEGIN 1 */
 1146              		.loc 1 103 1 view -0
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s 			page 32


 1147              		.cfi_startproc
 1148              		@ Volatile: function does not return.
 1149              		@ args = 0, pretend = 0, frame = 0
 1150              		@ frame_needed = 0, uses_anonymous_args = 0
 1151 0000 10B5     		push	{r4, lr}
 1152              	.LCFI11:
 1153              		.cfi_def_cfa_offset 8
 1154              		.cfi_offset 4, -8
 1155              		.cfi_offset 14, -4
 111:Core/Src/main.c **** 
 1156              		.loc 1 111 3 view .LVU253
 1157 0002 FFF7FEFF 		bl	HAL_Init
 1158              	.LVL88:
 118:Core/Src/main.c **** 
 1159              		.loc 1 118 3 view .LVU254
 1160 0006 FFF7FEFF 		bl	SystemClock_Config
 1161              	.LVL89:
 125:Core/Src/main.c ****   /* USER CODE BEGIN 2 */
 1162              		.loc 1 125 3 view .LVU255
 1163 000a FFF7FEFF 		bl	MX_GPIO_Init
 1164              	.LVL90:
 128:Core/Src/main.c **** 
 1165              		.loc 1 128 3 view .LVU256
 1166 000e 0B4C     		ldr	r4, .L48
 1167 0010 0122     		movs	r2, #1
 1168 0012 0121     		movs	r1, #1
 1169 0014 2000     		movs	r0, r4
 1170 0016 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1171              	.LVL91:
 131:Core/Src/main.c **** 
 1172              		.loc 1 131 3 view .LVU257
 1173 001a FFF7FEFF 		bl	run_benchmarks_for_all_dimensions
 1174              	.LVL92:
 134:Core/Src/main.c **** 
 1175              		.loc 1 134 3 view .LVU258
 1176 001e 0122     		movs	r2, #1
 1177 0020 0221     		movs	r1, #2
 1178 0022 2000     		movs	r0, r4
 1179 0024 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1180              	.LVL93:
 137:Core/Src/main.c **** 
 1181              		.loc 1 137 3 view .LVU259
 1182 0028 FA20     		movs	r0, #250
 1183 002a 8000     		lsls	r0, r0, #2
 1184 002c FFF7FEFF 		bl	HAL_Delay
 1185              	.LVL94:
 140:Core/Src/main.c **** 
 1186              		.loc 1 140 3 view .LVU260
 1187 0030 0022     		movs	r2, #0
 1188 0032 0321     		movs	r1, #3
 1189 0034 2000     		movs	r0, r4
 1190 0036 FFF7FEFF 		bl	HAL_GPIO_WritePin
 1191              	.LVL95:
 1192              	.L47:
 146:Core/Src/main.c ****   {
 1193              		.loc 1 146 3 view .LVU261
 151:Core/Src/main.c ****   /* USER CODE END 3 */
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s 			page 33


 1194              		.loc 1 151 3 view .LVU262
 146:Core/Src/main.c ****   {
 1195              		.loc 1 146 9 view .LVU263
 1196 003a FEE7     		b	.L47
 1197              	.L49:
 1198              		.align	2
 1199              	.L48:
 1200 003c 00040048 		.word	1207960576
 1201              		.cfi_endproc
 1202              	.LFE40:
 1204              		.global	checksum_double
 1205              		.section	.bss.checksum_double,"aw",%nobits
 1206              		.align	3
 1209              	checksum_double:
 1210 0000 00000000 		.space	40
 1210      00000000 
 1210      00000000 
 1210      00000000 
 1210      00000000 
 1211              		.global	checksum_fixed
 1212              		.section	.bss.checksum_fixed,"aw",%nobits
 1213              		.align	3
 1216              	checksum_fixed:
 1217 0000 00000000 		.space	40
 1217      00000000 
 1217      00000000 
 1217      00000000 
 1217      00000000 
 1218              		.global	execution_time_ms_double
 1219              		.section	.bss.execution_time_ms_double,"aw",%nobits
 1220              		.align	2
 1223              	execution_time_ms_double:
 1224 0000 00000000 		.space	20
 1224      00000000 
 1224      00000000 
 1224      00000000 
 1224      00000000 
 1225              		.global	execution_time_ms_fixed
 1226              		.section	.bss.execution_time_ms_fixed,"aw",%nobits
 1227              		.align	2
 1230              	execution_time_ms_fixed:
 1231 0000 00000000 		.space	20
 1231      00000000 
 1231      00000000 
 1231      00000000 
 1231      00000000 
 1232              		.global	checksum
 1233              		.section	.bss.checksum,"aw",%nobits
 1234              		.align	3
 1237              	checksum:
 1238 0000 00000000 		.space	8
 1238      00000000 
 1239              		.global	execution_time
 1240              		.section	.bss.execution_time,"aw",%nobits
 1241              		.align	2
 1244              	execution_time:
 1245 0000 00000000 		.space	4
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s 			page 34


 1246              		.global	end_time
 1247              		.section	.bss.end_time,"aw",%nobits
 1248              		.align	2
 1251              	end_time:
 1252 0000 00000000 		.space	4
 1253              		.global	start_time
 1254              		.section	.bss.start_time,"aw",%nobits
 1255              		.align	2
 1258              	start_time:
 1259 0000 00000000 		.space	4
 1260              		.global	use_double
 1261              		.section	.data.use_double,"aw"
 1262              		.align	2
 1265              	use_double:
 1266 0000 01000000 		.word	1
 1267              		.global	height
 1268              		.section	.data.height,"aw"
 1269              		.align	2
 1272              	height:
 1273 0000 80000000 		.word	128
 1274              		.global	width
 1275              		.section	.data.width,"aw"
 1276              		.align	2
 1279              	width:
 1280 0000 80000000 		.word	128
 1281              		.global	size_index
 1282              		.section	.bss.size_index,"aw",%nobits
 1283              		.align	2
 1286              	size_index:
 1287 0000 00000000 		.space	4
 1288              		.global	image_dimensions
 1289              		.section	.data.image_dimensions,"aw"
 1290              		.align	2
 1293              	image_dimensions:
 1294 0000 80000000 		.word	128
 1295 0004 A0000000 		.word	160
 1296 0008 C0000000 		.word	192
 1297 000c E0000000 		.word	224
 1298 0010 00010000 		.word	256
 1299              		.text
 1300              	.Letext0:
 1301              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1302              		.file 4 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 1303              		.file 5 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f051x8.h"
 1304              		.file 6 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_def.h"
 1305              		.file 7 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_rcc.h"
 1306              		.file 8 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal_gpio.h"
 1307              		.file 9 "Drivers/STM32F0xx_HAL_Driver/Inc/stm32f0xx_hal.h"
 1308              		.file 10 "<built-in>"
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s 			page 35


DEFINED SYMBOLS
                            *ABS*:00000000 main.c
C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s:19     .text.MX_GPIO_Init:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s:24     .text.MX_GPIO_Init:00000000 MX_GPIO_Init
C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s:114    .text.MX_GPIO_Init:0000005c $d
C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s:122    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s:128    .text.calculate_mandelbrot_fixed_point_arithmetic:00000000 calculate_mandelbrot_fixed_point_arithmetic
C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s:486    .text.calculate_mandelbrot_double:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s:492    .text.calculate_mandelbrot_double:00000000 calculate_mandelbrot_double
C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s:814    .text.calculate_mandelbrot_double:0000015c $d
C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s:822    .text.run_benchmarks_for_all_dimensions:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s:827    .text.run_benchmarks_for_all_dimensions:00000000 run_benchmarks_for_all_dimensions
C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s:990    .text.run_benchmarks_for_all_dimensions:000000b8 $d
C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s:1279   .data.width:00000000 width
C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s:1272   .data.height:00000000 height
C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s:1237   .bss.checksum:00000000 checksum
C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s:1216   .bss.checksum_fixed:00000000 checksum_fixed
C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s:1244   .bss.execution_time:00000000 execution_time
C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s:1230   .bss.execution_time_ms_fixed:00000000 execution_time_ms_fixed
C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s:1286   .bss.size_index:00000000 size_index
C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s:1293   .data.image_dimensions:00000000 image_dimensions
C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s:1258   .bss.start_time:00000000 start_time
C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s:1265   .data.use_double:00000000 use_double
C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s:1251   .bss.end_time:00000000 end_time
C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s:1209   .bss.checksum_double:00000000 checksum_double
C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s:1223   .bss.execution_time_ms_double:00000000 execution_time_ms_double
C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s:1007   .text.Error_Handler:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s:1013   .text.Error_Handler:00000000 Error_Handler
C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s:1045   .text.SystemClock_Config:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s:1051   .text.SystemClock_Config:00000000 SystemClock_Config
C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s:1138   .text.main:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s:1144   .text.main:00000000 main
C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s:1200   .text.main:0000003c $d
C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s:1206   .bss.checksum_double:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s:1213   .bss.checksum_fixed:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s:1220   .bss.execution_time_ms_double:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s:1227   .bss.execution_time_ms_fixed:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s:1234   .bss.checksum:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s:1241   .bss.execution_time:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s:1248   .bss.end_time:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s:1255   .bss.start_time:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s:1262   .data.use_double:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s:1269   .data.height:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s:1276   .data.width:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s:1283   .bss.size_index:00000000 $d
C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s:1290   .data.image_dimensions:00000000 $d

UNDEFINED SYMBOLS
memset
HAL_GPIO_WritePin
HAL_GPIO_Init
__aeabi_ldivmod
__aeabi_lmul
__aeabi_i2d
__aeabi_ddiv
__aeabi_dadd
__aeabi_dsub
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccIbA9FH.s 			page 36


__aeabi_dmul
__aeabi_dcmpgt
HAL_GetTick
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_Init
HAL_Delay
