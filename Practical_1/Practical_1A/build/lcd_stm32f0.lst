ARM GAS  C:\Users\einom\AppData\Local\Temp\ccaNFXgG.s 			page 1


   1              		.cpu cortex-m0
   2              		.arch armv6s-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 0
  12              		.eabi_attribute 18, 4
  13              		.file	"lcd_stm32f0.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.file 1 "Core/Inc/lcd_stm32f0.c"
  18              		.section	.text.delay,"ax",%progbits
  19              		.align	1
  20              		.global	delay
  21              		.syntax unified
  22              		.code	16
  23              		.thumb_func
  25              	delay:
  26              	.LVL0:
  27              	.LFB45:
   1:Core/Inc/lcd_stm32f0.c **** //********************************************************************
   2:Core/Inc/lcd_stm32f0.c **** //*                      EEE2046F STM32F0                            *
   3:Core/Inc/lcd_stm32f0.c **** //*                         LCD MODULE                               *
   4:Core/Inc/lcd_stm32f0.c **** //*==================================================================*
   5:Core/Inc/lcd_stm32f0.c **** //* WRITTEN BY:    Copyright (C) Samuel Ginsberg 2004                *
   6:Core/Inc/lcd_stm32f0.c **** //* PORTED TO STM32F0 dev board by James Gowans, 2014                *
   7:Core/Inc/lcd_stm32f0.c **** //* MODIFIED BY:   Robyn Verrinder                                   *
   8:Core/Inc/lcd_stm32f0.c **** //* DATE CREATED:  2004                                              *
   9:Core/Inc/lcd_stm32f0.c **** //* PORTED:	   2014						     *
  10:Core/Inc/lcd_stm32f0.c **** //* MODIFIED:      03-08-2015                                        *
  11:Core/Inc/lcd_stm32f0.c **** //*==================================================================*
  12:Core/Inc/lcd_stm32f0.c **** //* PROGRAMMED IN: ECLIPSE IDE Luna Service Release 1 (4.4.1)        *
  13:Core/Inc/lcd_stm32f0.c **** //* DEV. BOARD:    UCT STM32 Development Board                       *
  14:Core/Inc/lcd_stm32f0.c **** //* TARGET:	   STMicroelectronics STM32F051C6                    *
  15:Core/Inc/lcd_stm32f0.c **** //*==================================================================*
  16:Core/Inc/lcd_stm32f0.c **** //* DESCRIPTION:   This code contains common functions to communicate*
  17:Core/Inc/lcd_stm32f0.c **** //*                with the LCD module connected to the STM32 uC.    *
  18:Core/Inc/lcd_stm32f0.c **** //*==================================================================*
  19:Core/Inc/lcd_stm32f0.c **** //* LCD SETUP:     - 4 bit mode      (Upper 4 data lines D4-D7 used) *
  20:Core/Inc/lcd_stm32f0.c **** //*                - Two lines used                                  *
  21:Core/Inc/lcd_stm32f0.c **** //*                - Flashing cursor                                 *
  22:Core/Inc/lcd_stm32f0.c **** //*==================================================================*
  23:Core/Inc/lcd_stm32f0.c **** //* CONNECTIONS:                                                     *
  24:Core/Inc/lcd_stm32f0.c **** //*------------------------------------------------------------------*
  25:Core/Inc/lcd_stm32f0.c **** //* LCD PINS   | NAME                    | CONNECTED TO              *
  26:Core/Inc/lcd_stm32f0.c **** //*------------------------------------------------------------------*
  27:Core/Inc/lcd_stm32f0.c **** //* 1............VSS.......................GND                       *
  28:Core/Inc/lcd_stm32f0.c **** //* 2............VDD.......................+5V                       *
  29:Core/Inc/lcd_stm32f0.c **** //* 3............CONTRAST..................POT 2                     *
  30:Core/Inc/lcd_stm32f0.c **** //* 4............RS  - Register Select.....PC14 (LCD_RS)             *
  31:Core/Inc/lcd_stm32f0.c **** //* 5............RW  - Read/Write..........GND                       *
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccaNFXgG.s 			page 2


  32:Core/Inc/lcd_stm32f0.c **** //* 6............E   - Enable..............PC15 (LCD_E)              *
  33:Core/Inc/lcd_stm32f0.c **** //* 7............D0  - Data line 0.........GND                       *
  34:Core/Inc/lcd_stm32f0.c **** //* 8............D1  - Data line 1.........GND                       *
  35:Core/Inc/lcd_stm32f0.c **** //* 9............D2  - Data line 2.........GND                       *
  36:Core/Inc/lcd_stm32f0.c **** //* 10...........D3  - Data line 3.........GND                       *
  37:Core/Inc/lcd_stm32f0.c **** //* 11...........D4  - Data line 4.........PB8  (LCD_D4)             *
  38:Core/Inc/lcd_stm32f0.c **** //* 12...........D5  - Data line 5.........PB9  (LCD_D5)             *
  39:Core/Inc/lcd_stm32f0.c **** //* 13...........D6  - Data line 6.........PA12 (LCD_D6)             *
  40:Core/Inc/lcd_stm32f0.c **** //* 14...........D7  - Data line 7.........PA15 (LCD_D7)             *
  41:Core/Inc/lcd_stm32f0.c **** //* 15...........CATHLED...................NC                        *
  42:Core/Inc/lcd_stm32f0.c **** //* 16...........ANODELED..................NC                        *
  43:Core/Inc/lcd_stm32f0.c **** //********************************************************************
  44:Core/Inc/lcd_stm32f0.c **** // INCLUDE FILES
  45:Core/Inc/lcd_stm32f0.c **** //====================================================================
  46:Core/Inc/lcd_stm32f0.c **** #include "lcd_stm32f0.h"
  47:Core/Inc/lcd_stm32f0.c **** #include "stm32f0xx.h"
  48:Core/Inc/lcd_stm32f0.c **** //====================================================================
  49:Core/Inc/lcd_stm32f0.c **** // SEND COMMAND CODE TO LCD - LCD_Command(command)
  50:Core/Inc/lcd_stm32f0.c **** //====================================================================
  51:Core/Inc/lcd_stm32f0.c **** // DESCRIPTION: This function sends a command to the LCD. Care is taken
  52:Core/Inc/lcd_stm32f0.c **** //              not to interfere with the other lines on the port.
  53:Core/Inc/lcd_stm32f0.c **** //
  54:Core/Inc/lcd_stm32f0.c **** //              As we are using a microcontroller to control the LCD
  55:Core/Inc/lcd_stm32f0.c **** //              we use 4-bit mode to save on number of lines used to
  56:Core/Inc/lcd_stm32f0.c **** //              connect to the LCD. This means that an 8-bit command
  57:Core/Inc/lcd_stm32f0.c **** //              must be split into two sets of 4-bits (upper and lower)
  58:Core/Inc/lcd_stm32f0.c **** //              These sets must be transmitted
  59:Core/Inc/lcd_stm32f0.c **** //====================================================================
  60:Core/Inc/lcd_stm32f0.c **** // USEFUL COMMANDS:
  61:Core/Inc/lcd_stm32f0.c **** //                  - POWER_UP:      Power up initialization for the lcd
  62:Core/Inc/lcd_stm32f0.c **** //                  - FOURBIT_MODE:  Sets LCD for 4-bit mode
  63:Core/Inc/lcd_stm32f0.c **** //                  - TWOLINE_MODE:  Sets up 2 lines and character size
  64:Core/Inc/lcd_stm32f0.c **** //                  - SETUP_CURSOR:  Turn display on and set up cursor
  65:Core/Inc/lcd_stm32f0.c **** //                  - CLEAR:         Clear screen
  66:Core/Inc/lcd_stm32f0.c **** //                  - CURSOR_HOME:   Cursor home
  67:Core/Inc/lcd_stm32f0.c **** //                  - LINE_TWO:      Line 2
  68:Core/Inc/lcd_stm32f0.c **** //
  69:Core/Inc/lcd_stm32f0.c **** //====================================================================
  70:Core/Inc/lcd_stm32f0.c **** 
  71:Core/Inc/lcd_stm32f0.c **** void lcd_command(unsigned char command)
  72:Core/Inc/lcd_stm32f0.c **** {
  73:Core/Inc/lcd_stm32f0.c ****     GPIOC->BSRR |= LCD_RS_RESET;	// Register Select (RS)line low (data sent will now be read as com
  74:Core/Inc/lcd_stm32f0.c **** 
  75:Core/Inc/lcd_stm32f0.c **** // Put upper nibble (upper 4-bits) on data lines, command mode
  76:Core/Inc/lcd_stm32f0.c **** // DATALINE 7
  77:Core/Inc/lcd_stm32f0.c ****     if ((command & 0x80) != 0)		// Select bit 7 of command, if HIGH set Data line 7 (D7) 
  78:Core/Inc/lcd_stm32f0.c ****     {
  79:Core/Inc/lcd_stm32f0.c ****     	GPIOA->BSRR |= LCD_D7_SET;
  80:Core/Inc/lcd_stm32f0.c ****     }
  81:Core/Inc/lcd_stm32f0.c ****     else				// else RESET D7
  82:Core/Inc/lcd_stm32f0.c ****     {
  83:Core/Inc/lcd_stm32f0.c ****     	GPIOA->BSRR |= LCD_D7_RESET;
  84:Core/Inc/lcd_stm32f0.c ****     }
  85:Core/Inc/lcd_stm32f0.c **** // DATALINE 6
  86:Core/Inc/lcd_stm32f0.c ****     if ((command & 0x40) != 0)		// Select bit 6 of command, if HIGH set Data line 6 (D6) 
  87:Core/Inc/lcd_stm32f0.c ****     {
  88:Core/Inc/lcd_stm32f0.c ****         GPIOA->BSRR |= LCD_D6_SET;
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccaNFXgG.s 			page 3


  89:Core/Inc/lcd_stm32f0.c ****     }
  90:Core/Inc/lcd_stm32f0.c ****     else				// else RESET D6
  91:Core/Inc/lcd_stm32f0.c ****     {
  92:Core/Inc/lcd_stm32f0.c ****         GPIOA->BSRR |= LCD_D6_RESET;
  93:Core/Inc/lcd_stm32f0.c ****     }
  94:Core/Inc/lcd_stm32f0.c **** // DATALINE 5
  95:Core/Inc/lcd_stm32f0.c ****     if ((command & 0x20) != 0)		// Select bit 5 of command, if HIGH set Data line 5 (D5)
  96:Core/Inc/lcd_stm32f0.c ****     {
  97:Core/Inc/lcd_stm32f0.c ****     	GPIOB->BSRR |= LCD_D5_SET;	
  98:Core/Inc/lcd_stm32f0.c ****     }
  99:Core/Inc/lcd_stm32f0.c ****     else				// else RESET D5
 100:Core/Inc/lcd_stm32f0.c ****     {
 101:Core/Inc/lcd_stm32f0.c ****     	GPIOB->BSRR |= LCD_D5_RESET;
 102:Core/Inc/lcd_stm32f0.c ****     }
 103:Core/Inc/lcd_stm32f0.c **** // DATALINE 4
 104:Core/Inc/lcd_stm32f0.c ****     if ((command & 0x10) != 0)		// Select bit 4 of command, if HIGH set Data line 4 (D4)
 105:Core/Inc/lcd_stm32f0.c ****     {
 106:Core/Inc/lcd_stm32f0.c ****     	GPIOB->BSRR |= LCD_D4_SET;
 107:Core/Inc/lcd_stm32f0.c ****     }
 108:Core/Inc/lcd_stm32f0.c ****     else				//  else RESET D4
 109:Core/Inc/lcd_stm32f0.c ****     {
 110:Core/Inc/lcd_stm32f0.c ****     	GPIOB->BSRR |= LCD_D4_RESET;
 111:Core/Inc/lcd_stm32f0.c ****     }
 112:Core/Inc/lcd_stm32f0.c **** 
 113:Core/Inc/lcd_stm32f0.c ****     pulse_strobe ();			// Send data
 114:Core/Inc/lcd_stm32f0.c **** 
 115:Core/Inc/lcd_stm32f0.c **** // lower nibble to data lines
 116:Core/Inc/lcd_stm32f0.c ****     if ((command & 0x08) != 0)		// Select bit 3 of command, if HIGH set Data line 7 (D7) 
 117:Core/Inc/lcd_stm32f0.c ****     {
 118:Core/Inc/lcd_stm32f0.c ****     	GPIOA->BSRR |= LCD_D7_SET;
 119:Core/Inc/lcd_stm32f0.c ****     }
 120:Core/Inc/lcd_stm32f0.c ****     else				// else RESET D7
 121:Core/Inc/lcd_stm32f0.c ****     {
 122:Core/Inc/lcd_stm32f0.c ****     	GPIOA->BSRR |= LCD_D7_RESET;
 123:Core/Inc/lcd_stm32f0.c ****     }
 124:Core/Inc/lcd_stm32f0.c **** // DATALINE 6
 125:Core/Inc/lcd_stm32f0.c ****     if ((command & 0x04) != 0)		// Select bit 2 of command, if HIGH set Data line 6 (D6)
 126:Core/Inc/lcd_stm32f0.c ****     {
 127:Core/Inc/lcd_stm32f0.c ****         GPIOA->BSRR |= LCD_D6_SET;
 128:Core/Inc/lcd_stm32f0.c ****     }
 129:Core/Inc/lcd_stm32f0.c ****     else				//  else RESET D6
 130:Core/Inc/lcd_stm32f0.c ****     {
 131:Core/Inc/lcd_stm32f0.c ****         GPIOA->BSRR |= LCD_D6_RESET;
 132:Core/Inc/lcd_stm32f0.c ****     }
 133:Core/Inc/lcd_stm32f0.c ****     // DATALINE 5
 134:Core/Inc/lcd_stm32f0.c ****     if ((command & 0x02) != 0)		// Select bit 1 of command, if HIGH set Data line 5 (D5)
 135:Core/Inc/lcd_stm32f0.c ****     {
 136:Core/Inc/lcd_stm32f0.c ****     	GPIOB->BSRR |= LCD_D5_SET;         
 137:Core/Inc/lcd_stm32f0.c ****     }
 138:Core/Inc/lcd_stm32f0.c ****     else				//  else RESET D5
 139:Core/Inc/lcd_stm32f0.c ****     {
 140:Core/Inc/lcd_stm32f0.c ****     	GPIOB->BSRR |= LCD_D5_RESET;
 141:Core/Inc/lcd_stm32f0.c ****     }
 142:Core/Inc/lcd_stm32f0.c ****     // DATALINE 4
 143:Core/Inc/lcd_stm32f0.c ****     if ((command & 0x01) != 0)		// Select bit 0 of command, if HIGH set Data line 4 (D4)
 144:Core/Inc/lcd_stm32f0.c ****     {
 145:Core/Inc/lcd_stm32f0.c ****     	GPIOB->BSRR |= LCD_D4_SET;
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccaNFXgG.s 			page 4


 146:Core/Inc/lcd_stm32f0.c ****     }
 147:Core/Inc/lcd_stm32f0.c ****     else				//  else RESET D4
 148:Core/Inc/lcd_stm32f0.c ****     {
 149:Core/Inc/lcd_stm32f0.c ****     	GPIOB->BSRR |= LCD_D4_RESET;
 150:Core/Inc/lcd_stm32f0.c ****     }
 151:Core/Inc/lcd_stm32f0.c **** 
 152:Core/Inc/lcd_stm32f0.c ****     pulse_strobe();			// Send data
 153:Core/Inc/lcd_stm32f0.c ****     delay(3000);
 154:Core/Inc/lcd_stm32f0.c **** }
 155:Core/Inc/lcd_stm32f0.c **** 
 156:Core/Inc/lcd_stm32f0.c **** //====================================================================
 157:Core/Inc/lcd_stm32f0.c **** // INITIALISE LCD - LCD_Init()
 158:Core/Inc/lcd_stm32f0.c **** //====================================================================
 159:Core/Inc/lcd_stm32f0.c **** // DESCRIPTION: This function sets up the port lines for the LCD and
 160:Core/Inc/lcd_stm32f0.c **** //              intialises the module for use.
 161:Core/Inc/lcd_stm32f0.c **** //====================================================================
 162:Core/Inc/lcd_stm32f0.c **** // LCD SETUP:     - 4 bit mode      (Upper 4 data lines D4-D7 used)
 163:Core/Inc/lcd_stm32f0.c **** //                - Two lines used
 164:Core/Inc/lcd_stm32f0.c **** //                - Flashing cursor
 165:Core/Inc/lcd_stm32f0.c **** //====================================================================
 166:Core/Inc/lcd_stm32f0.c **** 
 167:Core/Inc/lcd_stm32f0.c **** void init_LCD(void)
 168:Core/Inc/lcd_stm32f0.c **** {
 169:Core/Inc/lcd_stm32f0.c ****     RCC->AHBENR |= RCC_AHBENR_GPIOAEN;	// Connect clocks to GPIO A, B and C
 170:Core/Inc/lcd_stm32f0.c ****     RCC->AHBENR |= RCC_AHBENR_GPIOBEN;
 171:Core/Inc/lcd_stm32f0.c ****     RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 172:Core/Inc/lcd_stm32f0.c **** 
 173:Core/Inc/lcd_stm32f0.c ****     GPIOA->MODER |= (GPIO_MODER_MODER12_0|GPIO_MODER_MODER15_0); // D6 and D7
 174:Core/Inc/lcd_stm32f0.c ****     GPIOB->MODER |= (GPIO_MODER_MODER8_0|GPIO_MODER_MODER9_0);   // D4 and D5
 175:Core/Inc/lcd_stm32f0.c ****     GPIOC->MODER |= (GPIO_MODER_MODER14_0|GPIO_MODER_MODER15_0); // RS and EN
 176:Core/Inc/lcd_stm32f0.c **** 
 177:Core/Inc/lcd_stm32f0.c ****     delay(30000);			// Allow the LCD some power up time (~30ms)
 178:Core/Inc/lcd_stm32f0.c **** 
 179:Core/Inc/lcd_stm32f0.c ****     lcd_command(POWER_UP);		// Power up initialization for the lcd
 180:Core/Inc/lcd_stm32f0.c ****     lcd_command(FOURBIT_MODE);		// Set LCD into 4 bit mode
 181:Core/Inc/lcd_stm32f0.c ****     lcd_command(DISPLAY_ON);		// Turn display on and set up cursor
 182:Core/Inc/lcd_stm32f0.c ****     lcd_command(TWOLINE_MODE);		// Set up 2 lines and character size
 183:Core/Inc/lcd_stm32f0.c ****     lcd_command(CLEAR);			// Clear display
 184:Core/Inc/lcd_stm32f0.c **** }
 185:Core/Inc/lcd_stm32f0.c **** 
 186:Core/Inc/lcd_stm32f0.c **** //====================================================================
 187:Core/Inc/lcd_stm32f0.c **** // WRITE A SINGLE CHARACTER TO THE LCD - LCD_PutChar(character)
 188:Core/Inc/lcd_stm32f0.c **** //====================================================================
 189:Core/Inc/lcd_stm32f0.c **** // DESCRIPTION: Puts a single character on the LCD at the next position
 190:Core/Inc/lcd_stm32f0.c **** //              on the screen. The character to be printed is in the input
 191:Core/Inc/lcd_stm32f0.c **** //              parameter. For numbers, letters and other common characters
 192:Core/Inc/lcd_stm32f0.c **** //              the ASCII code will produce correct display.
 193:Core/Inc/lcd_stm32f0.c **** //
 194:Core/Inc/lcd_stm32f0.c **** //              Refer to the Hitachi HD44780 datasheet for full character
 195:Core/Inc/lcd_stm32f0.c **** //              set information.
 196:Core/Inc/lcd_stm32f0.c **** //====================================================================
 197:Core/Inc/lcd_stm32f0.c **** 
 198:Core/Inc/lcd_stm32f0.c ****  void lcd_putchar(unsigned char character)
 199:Core/Inc/lcd_stm32f0.c **** {
 200:Core/Inc/lcd_stm32f0.c **** 	GPIOC->BSRR |= LCD_RS_SET;	// Register Select (RS) line HIGH (data sent will now be read as text);
 201:Core/Inc/lcd_stm32f0.c **** // Put upper nibble (upper 4-bits) on data lines, command mode
 202:Core/Inc/lcd_stm32f0.c **** // DATALINE 7
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccaNFXgG.s 			page 5


 203:Core/Inc/lcd_stm32f0.c ****         if ((character & 0x80) != 0) 	// Select bit 7 of command, if HIGH set Data line 7 (D7)
 204:Core/Inc/lcd_stm32f0.c ****         {
 205:Core/Inc/lcd_stm32f0.c ****         	GPIOA->BSRR |= LCD_D7_SET;
 206:Core/Inc/lcd_stm32f0.c ****         }
 207:Core/Inc/lcd_stm32f0.c ****         else				//  else RESET D7
 208:Core/Inc/lcd_stm32f0.c ****         {
 209:Core/Inc/lcd_stm32f0.c ****         	GPIOA->BSRR |= LCD_D7_RESET;
 210:Core/Inc/lcd_stm32f0.c ****         }
 211:Core/Inc/lcd_stm32f0.c ****         // DATALINE 6
 212:Core/Inc/lcd_stm32f0.c ****         if ((character & 0x40) != 0)	// Select bit 6 of command, if HIGH set Data line 6 (D6)      
 213:Core/Inc/lcd_stm32f0.c **** 	{
 214:Core/Inc/lcd_stm32f0.c ****             GPIOA->BSRR |= LCD_D6_SET;
 215:Core/Inc/lcd_stm32f0.c ****         }
 216:Core/Inc/lcd_stm32f0.c ****         else				//  else RESET D6
 217:Core/Inc/lcd_stm32f0.c **** 
 218:Core/Inc/lcd_stm32f0.c ****         {
 219:Core/Inc/lcd_stm32f0.c ****             GPIOA->BSRR |= LCD_D6_RESET;
 220:Core/Inc/lcd_stm32f0.c ****         }
 221:Core/Inc/lcd_stm32f0.c **** // DATALINE 5
 222:Core/Inc/lcd_stm32f0.c ****         if ((character & 0x20) != 0)	// Select bit 5 of command, if HIGH set Data line 5 (D5)
 223:Core/Inc/lcd_stm32f0.c **** 
 224:Core/Inc/lcd_stm32f0.c ****         {
 225:Core/Inc/lcd_stm32f0.c ****         	GPIOB->BSRR |= LCD_D5_SET;                 
 226:Core/Inc/lcd_stm32f0.c **** 	}
 227:Core/Inc/lcd_stm32f0.c ****         else				//  else RESET D5
 228:Core/Inc/lcd_stm32f0.c ****         {
 229:Core/Inc/lcd_stm32f0.c ****         	GPIOB->BSRR |= LCD_D5_RESET;
 230:Core/Inc/lcd_stm32f0.c ****         }
 231:Core/Inc/lcd_stm32f0.c **** // DATALINE 4
 232:Core/Inc/lcd_stm32f0.c ****         if ((character & 0x10) != 0)	// Select bit 4 of command, if HIGH set Data line 4 (D4) 
 233:Core/Inc/lcd_stm32f0.c ****         {
 234:Core/Inc/lcd_stm32f0.c ****         	GPIOB->BSRR |= LCD_D4_SET;
 235:Core/Inc/lcd_stm32f0.c ****         }
 236:Core/Inc/lcd_stm32f0.c ****         else				// else RESET D4
 237:Core/Inc/lcd_stm32f0.c ****         {
 238:Core/Inc/lcd_stm32f0.c ****         	GPIOB->BSRR |= LCD_D4_RESET;
 239:Core/Inc/lcd_stm32f0.c ****         }
 240:Core/Inc/lcd_stm32f0.c **** 
 241:Core/Inc/lcd_stm32f0.c ****         pulse_strobe ();		// Send data
 242:Core/Inc/lcd_stm32f0.c **** 
 243:Core/Inc/lcd_stm32f0.c **** // lower nibble to data lines
 244:Core/Inc/lcd_stm32f0.c ****         if ((character & 0x08) != 0)	// Select bit 3 of command, if HIGH set Data line 7 (D7) 
 245:Core/Inc/lcd_stm32f0.c ****         {
 246:Core/Inc/lcd_stm32f0.c ****         	GPIOA->BSRR |= LCD_D7_SET;
 247:Core/Inc/lcd_stm32f0.c ****         }
 248:Core/Inc/lcd_stm32f0.c ****         else				// else RESET D7
 249:Core/Inc/lcd_stm32f0.c ****         {
 250:Core/Inc/lcd_stm32f0.c ****         	GPIOA->BSRR |= LCD_D7_RESET;
 251:Core/Inc/lcd_stm32f0.c ****         }
 252:Core/Inc/lcd_stm32f0.c **** // DATALINE 6
 253:Core/Inc/lcd_stm32f0.c ****         if ((character & 0x04) != 0)	// Select bit 2 of command, if HIGH set Data line 6 (D6)      
 254:Core/Inc/lcd_stm32f0.c **** 	{
 255:Core/Inc/lcd_stm32f0.c ****             GPIOA->BSRR |= LCD_D6_SET;
 256:Core/Inc/lcd_stm32f0.c ****         }
 257:Core/Inc/lcd_stm32f0.c ****         else				// else RESET D6
 258:Core/Inc/lcd_stm32f0.c **** 
 259:Core/Inc/lcd_stm32f0.c ****         {
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccaNFXgG.s 			page 6


 260:Core/Inc/lcd_stm32f0.c ****             GPIOA->BSRR |= LCD_D6_RESET;
 261:Core/Inc/lcd_stm32f0.c ****         }
 262:Core/Inc/lcd_stm32f0.c **** // DATALINE 5
 263:Core/Inc/lcd_stm32f0.c ****         if ((character & 0x02) != 0)	// Select bit 1 of command, if HIGH set Data line 5 (D5)  
 264:Core/Inc/lcd_stm32f0.c ****         {
 265:Core/Inc/lcd_stm32f0.c ****         	GPIOB->BSRR |= LCD_D5_SET;       
 266:Core/Inc/lcd_stm32f0.c **** 	}
 267:Core/Inc/lcd_stm32f0.c ****         else				// else RESET D5
 268:Core/Inc/lcd_stm32f0.c ****         {
 269:Core/Inc/lcd_stm32f0.c ****         	GPIOB->BSRR |= LCD_D5_RESET;
 270:Core/Inc/lcd_stm32f0.c ****         }
 271:Core/Inc/lcd_stm32f0.c **** // DATALINE 4
 272:Core/Inc/lcd_stm32f0.c ****         if ((character & 0x01) != 0)	// Select bit 0 of command, if HIGH set Data line 4 (D4)
 273:Core/Inc/lcd_stm32f0.c ****         {
 274:Core/Inc/lcd_stm32f0.c ****         	GPIOB->BSRR |= LCD_D4_SET;
 275:Core/Inc/lcd_stm32f0.c ****         }
 276:Core/Inc/lcd_stm32f0.c ****         else				//  else RESET D4
 277:Core/Inc/lcd_stm32f0.c ****         {
 278:Core/Inc/lcd_stm32f0.c ****         	GPIOB->BSRR |= LCD_D4_RESET;
 279:Core/Inc/lcd_stm32f0.c ****         }
 280:Core/Inc/lcd_stm32f0.c **** 
 281:Core/Inc/lcd_stm32f0.c ****         pulse_strobe();			// Send data
 282:Core/Inc/lcd_stm32f0.c **** }
 283:Core/Inc/lcd_stm32f0.c **** 
 284:Core/Inc/lcd_stm32f0.c **** //====================================================================
 285:Core/Inc/lcd_stm32f0.c **** // WRITE A STRING TO THE LCD - LCD_PutString(ptr_String)
 286:Core/Inc/lcd_stm32f0.c **** //====================================================================
 287:Core/Inc/lcd_stm32f0.c **** // DESCRIPTION: Writes a string to the LCD
 288:Core/Inc/lcd_stm32f0.c **** //====================================================================
 289:Core/Inc/lcd_stm32f0.c **** 
 290:Core/Inc/lcd_stm32f0.c **** void lcd_putstring(char *instring)
 291:Core/Inc/lcd_stm32f0.c **** {
 292:Core/Inc/lcd_stm32f0.c ****     unsigned char count = 0;
 293:Core/Inc/lcd_stm32f0.c **** 
 294:Core/Inc/lcd_stm32f0.c ****     while (instring[count])		// Until the null terminator is reached
 295:Core/Inc/lcd_stm32f0.c ****     {
 296:Core/Inc/lcd_stm32f0.c ****     	lcd_putchar(instring[count]);	// Write each character to LCD
 297:Core/Inc/lcd_stm32f0.c **** 	    count++;
 298:Core/Inc/lcd_stm32f0.c **** 	 }
 299:Core/Inc/lcd_stm32f0.c **** }
 300:Core/Inc/lcd_stm32f0.c **** 
 301:Core/Inc/lcd_stm32f0.c **** 
 302:Core/Inc/lcd_stm32f0.c **** //====================================================================
 303:Core/Inc/lcd_stm32f0.c **** // PULSE STROBE - Pulse_Strobe()
 304:Core/Inc/lcd_stm32f0.c **** //====================================================================
 305:Core/Inc/lcd_stm32f0.c **** // DESCRIPTION: Pulse the strobe line of the LCD to indicate that data is ready.
 306:Core/Inc/lcd_stm32f0.c **** //====================================================================
 307:Core/Inc/lcd_stm32f0.c **** 
 308:Core/Inc/lcd_stm32f0.c **** void pulse_strobe(void)
 309:Core/Inc/lcd_stm32f0.c **** {
 310:Core/Inc/lcd_stm32f0.c ****     delay(20);				// Delay
 311:Core/Inc/lcd_stm32f0.c **** 
 312:Core/Inc/lcd_stm32f0.c ****     GPIOC->BSRR |= LCD_EN_SET;		// pull E (PC15) HIGH
 313:Core/Inc/lcd_stm32f0.c **** 
 314:Core/Inc/lcd_stm32f0.c ****     delay(20);				// Delay
 315:Core/Inc/lcd_stm32f0.c **** 
 316:Core/Inc/lcd_stm32f0.c ****     GPIOC->BSRR |= LCD_EN_RESET;	// Take EN LOW
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccaNFXgG.s 			page 7


 317:Core/Inc/lcd_stm32f0.c **** 
 318:Core/Inc/lcd_stm32f0.c ****     delay(20);				// Delay
 319:Core/Inc/lcd_stm32f0.c **** 
 320:Core/Inc/lcd_stm32f0.c ****     GPIOC->BSRR |= LCD_EN_SET;		// Take EN HIGH
 321:Core/Inc/lcd_stm32f0.c **** }
 322:Core/Inc/lcd_stm32f0.c **** 
 323:Core/Inc/lcd_stm32f0.c **** 
 324:Core/Inc/lcd_stm32f0.c **** //====================================================================
 325:Core/Inc/lcd_stm32f0.c **** // LOOP DELAY - delay(microseconds)
 326:Core/Inc/lcd_stm32f0.c **** //====================================================================
 327:Core/Inc/lcd_stm32f0.c **** // DESCRIPTION: A delay used by the LCD functions.
 328:Core/Inc/lcd_stm32f0.c **** //====================================================================
 329:Core/Inc/lcd_stm32f0.c **** 
 330:Core/Inc/lcd_stm32f0.c **** void delay(unsigned int microseconds)
 331:Core/Inc/lcd_stm32f0.c **** {
  28              		.loc 1 331 1 view -0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 8
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              		.loc 1 331 1 is_stmt 0 view .LVU1
  34 0000 82B0     		sub	sp, sp, #8
  35              	.LCFI0:
  36              		.cfi_def_cfa_offset 8
 332:Core/Inc/lcd_stm32f0.c **** 	  volatile unsigned int counter;
  37              		.loc 1 332 4 is_stmt 1 view .LVU2
 333:Core/Inc/lcd_stm32f0.c **** 	  microseconds *= 3;
  38              		.loc 1 333 4 view .LVU3
  39              		.loc 1 333 17 is_stmt 0 view .LVU4
  40 0002 4300     		lsls	r3, r0, #1
  41 0004 1818     		adds	r0, r3, r0
  42              	.LVL1:
 334:Core/Inc/lcd_stm32f0.c **** 	  for(counter = 0; counter<microseconds; counter++)
  43              		.loc 1 334 4 is_stmt 1 view .LVU5
  44              		.loc 1 334 16 is_stmt 0 view .LVU6
  45 0006 0023     		movs	r3, #0
  46 0008 0193     		str	r3, [sp, #4]
  47              		.loc 1 334 4 view .LVU7
  48 000a 04E0     		b	.L2
  49              	.L3:
 335:Core/Inc/lcd_stm32f0.c **** 	  {
 336:Core/Inc/lcd_stm32f0.c **** 	    __asm("nop");
  50              		.loc 1 336 6 is_stmt 1 view .LVU8
  51              		.syntax divided
  52              	@ 336 "Core/Inc/lcd_stm32f0.c" 1
  53 000c C046     		nop
  54              	@ 0 "" 2
 337:Core/Inc/lcd_stm32f0.c **** 	    __asm("nop");
  55              		.loc 1 337 6 view .LVU9
  56              	@ 337 "Core/Inc/lcd_stm32f0.c" 1
  57 000e C046     		nop
  58              	@ 0 "" 2
 334:Core/Inc/lcd_stm32f0.c **** 	  for(counter = 0; counter<microseconds; counter++)
  59              		.loc 1 334 50 discriminator 3 view .LVU10
  60              		.thumb
  61              		.syntax unified
  62 0010 019B     		ldr	r3, [sp, #4]
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccaNFXgG.s 			page 8


  63 0012 0133     		adds	r3, r3, #1
  64 0014 0193     		str	r3, [sp, #4]
  65              	.L2:
 334:Core/Inc/lcd_stm32f0.c **** 	  for(counter = 0; counter<microseconds; counter++)
  66              		.loc 1 334 28 discriminator 1 view .LVU11
  67 0016 019B     		ldr	r3, [sp, #4]
  68 0018 8342     		cmp	r3, r0
  69 001a F7D3     		bcc	.L3
 338:Core/Inc/lcd_stm32f0.c **** 	  }
 339:Core/Inc/lcd_stm32f0.c **** }
  70              		.loc 1 339 1 is_stmt 0 view .LVU12
  71 001c 02B0     		add	sp, sp, #8
  72              		@ sp needed
  73 001e 7047     		bx	lr
  74              		.cfi_endproc
  75              	.LFE45:
  77              		.section	.text.pulse_strobe,"ax",%progbits
  78              		.align	1
  79              		.global	pulse_strobe
  80              		.syntax unified
  81              		.code	16
  82              		.thumb_func
  84              	pulse_strobe:
  85              	.LFB44:
 309:Core/Inc/lcd_stm32f0.c ****     delay(20);				// Delay
  86              		.loc 1 309 1 is_stmt 1 view -0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90 0000 70B5     		push	{r4, r5, r6, lr}
  91              	.LCFI1:
  92              		.cfi_def_cfa_offset 16
  93              		.cfi_offset 4, -16
  94              		.cfi_offset 5, -12
  95              		.cfi_offset 6, -8
  96              		.cfi_offset 14, -4
 310:Core/Inc/lcd_stm32f0.c **** 
  97              		.loc 1 310 5 view .LVU14
  98 0002 1420     		movs	r0, #20
  99 0004 FFF7FEFF 		bl	delay
 100              	.LVL2:
 312:Core/Inc/lcd_stm32f0.c **** 
 101              		.loc 1 312 5 view .LVU15
 312:Core/Inc/lcd_stm32f0.c **** 
 102              		.loc 1 312 10 is_stmt 0 view .LVU16
 103 0008 0A4C     		ldr	r4, .L5
 104 000a A369     		ldr	r3, [r4, #24]
 312:Core/Inc/lcd_stm32f0.c **** 
 105              		.loc 1 312 17 view .LVU17
 106 000c 8025     		movs	r5, #128
 107 000e 2D02     		lsls	r5, r5, #8
 108 0010 2B43     		orrs	r3, r5
 109 0012 A361     		str	r3, [r4, #24]
 314:Core/Inc/lcd_stm32f0.c **** 
 110              		.loc 1 314 5 is_stmt 1 view .LVU18
 111 0014 1420     		movs	r0, #20
 112 0016 FFF7FEFF 		bl	delay
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccaNFXgG.s 			page 9


 113              	.LVL3:
 316:Core/Inc/lcd_stm32f0.c **** 
 114              		.loc 1 316 5 view .LVU19
 316:Core/Inc/lcd_stm32f0.c **** 
 115              		.loc 1 316 10 is_stmt 0 view .LVU20
 116 001a A269     		ldr	r2, [r4, #24]
 316:Core/Inc/lcd_stm32f0.c **** 
 117              		.loc 1 316 17 view .LVU21
 118 001c 8023     		movs	r3, #128
 119 001e 1B06     		lsls	r3, r3, #24
 120 0020 1343     		orrs	r3, r2
 121 0022 A361     		str	r3, [r4, #24]
 318:Core/Inc/lcd_stm32f0.c **** 
 122              		.loc 1 318 5 is_stmt 1 view .LVU22
 123 0024 1420     		movs	r0, #20
 124 0026 FFF7FEFF 		bl	delay
 125              	.LVL4:
 320:Core/Inc/lcd_stm32f0.c **** }
 126              		.loc 1 320 5 view .LVU23
 320:Core/Inc/lcd_stm32f0.c **** }
 127              		.loc 1 320 10 is_stmt 0 view .LVU24
 128 002a A369     		ldr	r3, [r4, #24]
 320:Core/Inc/lcd_stm32f0.c **** }
 129              		.loc 1 320 17 view .LVU25
 130 002c 1D43     		orrs	r5, r3
 131 002e A561     		str	r5, [r4, #24]
 321:Core/Inc/lcd_stm32f0.c **** 
 132              		.loc 1 321 1 view .LVU26
 133              		@ sp needed
 134 0030 70BD     		pop	{r4, r5, r6, pc}
 135              	.L6:
 136 0032 C046     		.align	2
 137              	.L5:
 138 0034 00080048 		.word	1207961600
 139              		.cfi_endproc
 140              	.LFE44:
 142              		.section	.text.lcd_putchar,"ax",%progbits
 143              		.align	1
 144              		.global	lcd_putchar
 145              		.syntax unified
 146              		.code	16
 147              		.thumb_func
 149              	lcd_putchar:
 150              	.LVL5:
 151              	.LFB42:
 199:Core/Inc/lcd_stm32f0.c **** 	GPIOC->BSRR |= LCD_RS_SET;	// Register Select (RS) line HIGH (data sent will now be read as text);
 152              		.loc 1 199 1 is_stmt 1 view -0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 0
 155              		@ frame_needed = 0, uses_anonymous_args = 0
 199:Core/Inc/lcd_stm32f0.c **** 	GPIOC->BSRR |= LCD_RS_SET;	// Register Select (RS) line HIGH (data sent will now be read as text);
 156              		.loc 1 199 1 is_stmt 0 view .LVU28
 157 0000 10B5     		push	{r4, lr}
 158              	.LCFI2:
 159              		.cfi_def_cfa_offset 8
 160              		.cfi_offset 4, -8
 161              		.cfi_offset 14, -4
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccaNFXgG.s 			page 10


 162 0002 0400     		movs	r4, r0
 200:Core/Inc/lcd_stm32f0.c **** // Put upper nibble (upper 4-bits) on data lines, command mode
 163              		.loc 1 200 2 is_stmt 1 view .LVU29
 200:Core/Inc/lcd_stm32f0.c **** // Put upper nibble (upper 4-bits) on data lines, command mode
 164              		.loc 1 200 7 is_stmt 0 view .LVU30
 165 0004 454A     		ldr	r2, .L25
 166 0006 9169     		ldr	r1, [r2, #24]
 200:Core/Inc/lcd_stm32f0.c **** // Put upper nibble (upper 4-bits) on data lines, command mode
 167              		.loc 1 200 14 view .LVU31
 168 0008 8023     		movs	r3, #128
 169 000a DB01     		lsls	r3, r3, #7
 170 000c 0B43     		orrs	r3, r1
 171 000e 9361     		str	r3, [r2, #24]
 203:Core/Inc/lcd_stm32f0.c ****         {
 172              		.loc 1 203 9 is_stmt 1 view .LVU32
 203:Core/Inc/lcd_stm32f0.c ****         {
 173              		.loc 1 203 32 is_stmt 0 view .LVU33
 174 0010 43B2     		sxtb	r3, r0
 203:Core/Inc/lcd_stm32f0.c ****         {
 175              		.loc 1 203 12 view .LVU34
 176 0012 002B     		cmp	r3, #0
 177 0014 46DB     		blt	.L24
 209:Core/Inc/lcd_stm32f0.c ****         }
 178              		.loc 1 209 10 is_stmt 1 view .LVU35
 209:Core/Inc/lcd_stm32f0.c ****         }
 179              		.loc 1 209 15 is_stmt 0 view .LVU36
 180 0016 9022     		movs	r2, #144
 181 0018 D205     		lsls	r2, r2, #23
 182 001a 9169     		ldr	r1, [r2, #24]
 209:Core/Inc/lcd_stm32f0.c ****         }
 183              		.loc 1 209 22 view .LVU37
 184 001c 8023     		movs	r3, #128
 185 001e 1B06     		lsls	r3, r3, #24
 186 0020 0B43     		orrs	r3, r1
 187 0022 9361     		str	r3, [r2, #24]
 188              	.L9:
 212:Core/Inc/lcd_stm32f0.c **** 	{
 189              		.loc 1 212 9 is_stmt 1 view .LVU38
 212:Core/Inc/lcd_stm32f0.c **** 	{
 190              		.loc 1 212 12 is_stmt 0 view .LVU39
 191 0024 6306     		lsls	r3, r4, #25
 192 0026 45D5     		bpl	.L10
 214:Core/Inc/lcd_stm32f0.c ****         }
 193              		.loc 1 214 13 is_stmt 1 view .LVU40
 214:Core/Inc/lcd_stm32f0.c ****         }
 194              		.loc 1 214 18 is_stmt 0 view .LVU41
 195 0028 9022     		movs	r2, #144
 196 002a D205     		lsls	r2, r2, #23
 197 002c 9169     		ldr	r1, [r2, #24]
 214:Core/Inc/lcd_stm32f0.c ****         }
 198              		.loc 1 214 25 view .LVU42
 199 002e 8023     		movs	r3, #128
 200 0030 5B01     		lsls	r3, r3, #5
 201 0032 0B43     		orrs	r3, r1
 202 0034 9361     		str	r3, [r2, #24]
 203              	.L11:
 222:Core/Inc/lcd_stm32f0.c **** 
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccaNFXgG.s 			page 11


 204              		.loc 1 222 9 is_stmt 1 view .LVU43
 222:Core/Inc/lcd_stm32f0.c **** 
 205              		.loc 1 222 12 is_stmt 0 view .LVU44
 206 0036 A306     		lsls	r3, r4, #26
 207 0038 44D5     		bpl	.L12
 225:Core/Inc/lcd_stm32f0.c **** 	}
 208              		.loc 1 225 10 is_stmt 1 view .LVU45
 225:Core/Inc/lcd_stm32f0.c **** 	}
 209              		.loc 1 225 15 is_stmt 0 view .LVU46
 210 003a 394A     		ldr	r2, .L25+4
 211 003c 9169     		ldr	r1, [r2, #24]
 225:Core/Inc/lcd_stm32f0.c **** 	}
 212              		.loc 1 225 22 view .LVU47
 213 003e 8023     		movs	r3, #128
 214 0040 9B00     		lsls	r3, r3, #2
 215 0042 0B43     		orrs	r3, r1
 216 0044 9361     		str	r3, [r2, #24]
 217              	.L13:
 232:Core/Inc/lcd_stm32f0.c ****         {
 218              		.loc 1 232 9 is_stmt 1 view .LVU48
 232:Core/Inc/lcd_stm32f0.c ****         {
 219              		.loc 1 232 12 is_stmt 0 view .LVU49
 220 0046 E306     		lsls	r3, r4, #27
 221 0048 43D5     		bpl	.L14
 234:Core/Inc/lcd_stm32f0.c ****         }
 222              		.loc 1 234 10 is_stmt 1 view .LVU50
 234:Core/Inc/lcd_stm32f0.c ****         }
 223              		.loc 1 234 15 is_stmt 0 view .LVU51
 224 004a 354A     		ldr	r2, .L25+4
 225 004c 9169     		ldr	r1, [r2, #24]
 234:Core/Inc/lcd_stm32f0.c ****         }
 226              		.loc 1 234 22 view .LVU52
 227 004e 8023     		movs	r3, #128
 228 0050 5B00     		lsls	r3, r3, #1
 229 0052 0B43     		orrs	r3, r1
 230 0054 9361     		str	r3, [r2, #24]
 231              	.L15:
 241:Core/Inc/lcd_stm32f0.c **** 
 232              		.loc 1 241 9 is_stmt 1 view .LVU53
 233 0056 FFF7FEFF 		bl	pulse_strobe
 234              	.LVL6:
 244:Core/Inc/lcd_stm32f0.c ****         {
 235              		.loc 1 244 9 view .LVU54
 244:Core/Inc/lcd_stm32f0.c ****         {
 236              		.loc 1 244 12 is_stmt 0 view .LVU55
 237 005a 2307     		lsls	r3, r4, #28
 238 005c 40D5     		bpl	.L16
 246:Core/Inc/lcd_stm32f0.c ****         }
 239              		.loc 1 246 10 is_stmt 1 view .LVU56
 246:Core/Inc/lcd_stm32f0.c ****         }
 240              		.loc 1 246 15 is_stmt 0 view .LVU57
 241 005e 9022     		movs	r2, #144
 242 0060 D205     		lsls	r2, r2, #23
 243 0062 9169     		ldr	r1, [r2, #24]
 246:Core/Inc/lcd_stm32f0.c ****         }
 244              		.loc 1 246 22 view .LVU58
 245 0064 8023     		movs	r3, #128
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccaNFXgG.s 			page 12


 246 0066 1B02     		lsls	r3, r3, #8
 247 0068 0B43     		orrs	r3, r1
 248 006a 9361     		str	r3, [r2, #24]
 249              	.L17:
 253:Core/Inc/lcd_stm32f0.c **** 	{
 250              		.loc 1 253 9 is_stmt 1 view .LVU59
 253:Core/Inc/lcd_stm32f0.c **** 	{
 251              		.loc 1 253 12 is_stmt 0 view .LVU60
 252 006c 6307     		lsls	r3, r4, #29
 253 006e 3FD5     		bpl	.L18
 255:Core/Inc/lcd_stm32f0.c ****         }
 254              		.loc 1 255 13 is_stmt 1 view .LVU61
 255:Core/Inc/lcd_stm32f0.c ****         }
 255              		.loc 1 255 18 is_stmt 0 view .LVU62
 256 0070 9022     		movs	r2, #144
 257 0072 D205     		lsls	r2, r2, #23
 258 0074 9169     		ldr	r1, [r2, #24]
 255:Core/Inc/lcd_stm32f0.c ****         }
 259              		.loc 1 255 25 view .LVU63
 260 0076 8023     		movs	r3, #128
 261 0078 5B01     		lsls	r3, r3, #5
 262 007a 0B43     		orrs	r3, r1
 263 007c 9361     		str	r3, [r2, #24]
 264              	.L19:
 263:Core/Inc/lcd_stm32f0.c ****         {
 265              		.loc 1 263 9 is_stmt 1 view .LVU64
 263:Core/Inc/lcd_stm32f0.c ****         {
 266              		.loc 1 263 12 is_stmt 0 view .LVU65
 267 007e A307     		lsls	r3, r4, #30
 268 0080 3ED5     		bpl	.L20
 265:Core/Inc/lcd_stm32f0.c **** 	}
 269              		.loc 1 265 10 is_stmt 1 view .LVU66
 265:Core/Inc/lcd_stm32f0.c **** 	}
 270              		.loc 1 265 15 is_stmt 0 view .LVU67
 271 0082 274A     		ldr	r2, .L25+4
 272 0084 9169     		ldr	r1, [r2, #24]
 265:Core/Inc/lcd_stm32f0.c **** 	}
 273              		.loc 1 265 22 view .LVU68
 274 0086 8023     		movs	r3, #128
 275 0088 9B00     		lsls	r3, r3, #2
 276 008a 0B43     		orrs	r3, r1
 277 008c 9361     		str	r3, [r2, #24]
 278              	.L21:
 272:Core/Inc/lcd_stm32f0.c ****         {
 279              		.loc 1 272 9 is_stmt 1 view .LVU69
 272:Core/Inc/lcd_stm32f0.c ****         {
 280              		.loc 1 272 12 is_stmt 0 view .LVU70
 281 008e E407     		lsls	r4, r4, #31
 282 0090 3DD5     		bpl	.L22
 283              	.LVL7:
 274:Core/Inc/lcd_stm32f0.c ****         }
 284              		.loc 1 274 10 is_stmt 1 view .LVU71
 274:Core/Inc/lcd_stm32f0.c ****         }
 285              		.loc 1 274 15 is_stmt 0 view .LVU72
 286 0092 234A     		ldr	r2, .L25+4
 287 0094 9169     		ldr	r1, [r2, #24]
 274:Core/Inc/lcd_stm32f0.c ****         }
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccaNFXgG.s 			page 13


 288              		.loc 1 274 22 view .LVU73
 289 0096 8023     		movs	r3, #128
 290 0098 5B00     		lsls	r3, r3, #1
 291 009a 0B43     		orrs	r3, r1
 292 009c 9361     		str	r3, [r2, #24]
 293              	.L23:
 281:Core/Inc/lcd_stm32f0.c **** }
 294              		.loc 1 281 9 is_stmt 1 view .LVU74
 295 009e FFF7FEFF 		bl	pulse_strobe
 296              	.LVL8:
 282:Core/Inc/lcd_stm32f0.c **** 
 297              		.loc 1 282 1 is_stmt 0 view .LVU75
 298              		@ sp needed
 299 00a2 10BD     		pop	{r4, pc}
 300              	.LVL9:
 301              	.L24:
 205:Core/Inc/lcd_stm32f0.c ****         }
 302              		.loc 1 205 10 is_stmt 1 view .LVU76
 205:Core/Inc/lcd_stm32f0.c ****         }
 303              		.loc 1 205 15 is_stmt 0 view .LVU77
 304 00a4 9022     		movs	r2, #144
 305 00a6 D205     		lsls	r2, r2, #23
 306 00a8 9169     		ldr	r1, [r2, #24]
 205:Core/Inc/lcd_stm32f0.c ****         }
 307              		.loc 1 205 22 view .LVU78
 308 00aa 8023     		movs	r3, #128
 309 00ac 1B02     		lsls	r3, r3, #8
 310 00ae 0B43     		orrs	r3, r1
 311 00b0 9361     		str	r3, [r2, #24]
 312 00b2 B7E7     		b	.L9
 313              	.L10:
 219:Core/Inc/lcd_stm32f0.c ****         }
 314              		.loc 1 219 13 is_stmt 1 view .LVU79
 219:Core/Inc/lcd_stm32f0.c ****         }
 315              		.loc 1 219 18 is_stmt 0 view .LVU80
 316 00b4 9022     		movs	r2, #144
 317 00b6 D205     		lsls	r2, r2, #23
 318 00b8 9169     		ldr	r1, [r2, #24]
 219:Core/Inc/lcd_stm32f0.c ****         }
 319              		.loc 1 219 25 view .LVU81
 320 00ba 8023     		movs	r3, #128
 321 00bc 5B05     		lsls	r3, r3, #21
 322 00be 0B43     		orrs	r3, r1
 323 00c0 9361     		str	r3, [r2, #24]
 324 00c2 B8E7     		b	.L11
 325              	.L12:
 229:Core/Inc/lcd_stm32f0.c ****         }
 326              		.loc 1 229 10 is_stmt 1 view .LVU82
 229:Core/Inc/lcd_stm32f0.c ****         }
 327              		.loc 1 229 15 is_stmt 0 view .LVU83
 328 00c4 164A     		ldr	r2, .L25+4
 329 00c6 9169     		ldr	r1, [r2, #24]
 229:Core/Inc/lcd_stm32f0.c ****         }
 330              		.loc 1 229 22 view .LVU84
 331 00c8 8023     		movs	r3, #128
 332 00ca 9B04     		lsls	r3, r3, #18
 333 00cc 0B43     		orrs	r3, r1
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccaNFXgG.s 			page 14


 334 00ce 9361     		str	r3, [r2, #24]
 335 00d0 B9E7     		b	.L13
 336              	.L14:
 238:Core/Inc/lcd_stm32f0.c ****         }
 337              		.loc 1 238 10 is_stmt 1 view .LVU85
 238:Core/Inc/lcd_stm32f0.c ****         }
 338              		.loc 1 238 15 is_stmt 0 view .LVU86
 339 00d2 134A     		ldr	r2, .L25+4
 340 00d4 9169     		ldr	r1, [r2, #24]
 238:Core/Inc/lcd_stm32f0.c ****         }
 341              		.loc 1 238 22 view .LVU87
 342 00d6 8023     		movs	r3, #128
 343 00d8 5B04     		lsls	r3, r3, #17
 344 00da 0B43     		orrs	r3, r1
 345 00dc 9361     		str	r3, [r2, #24]
 346 00de BAE7     		b	.L15
 347              	.LVL10:
 348              	.L16:
 250:Core/Inc/lcd_stm32f0.c ****         }
 349              		.loc 1 250 10 is_stmt 1 view .LVU88
 250:Core/Inc/lcd_stm32f0.c ****         }
 350              		.loc 1 250 15 is_stmt 0 view .LVU89
 351 00e0 9022     		movs	r2, #144
 352 00e2 D205     		lsls	r2, r2, #23
 353 00e4 9169     		ldr	r1, [r2, #24]
 250:Core/Inc/lcd_stm32f0.c ****         }
 354              		.loc 1 250 22 view .LVU90
 355 00e6 8023     		movs	r3, #128
 356 00e8 1B06     		lsls	r3, r3, #24
 357 00ea 0B43     		orrs	r3, r1
 358 00ec 9361     		str	r3, [r2, #24]
 359 00ee BDE7     		b	.L17
 360              	.L18:
 260:Core/Inc/lcd_stm32f0.c ****         }
 361              		.loc 1 260 13 is_stmt 1 view .LVU91
 260:Core/Inc/lcd_stm32f0.c ****         }
 362              		.loc 1 260 18 is_stmt 0 view .LVU92
 363 00f0 9022     		movs	r2, #144
 364 00f2 D205     		lsls	r2, r2, #23
 365 00f4 9169     		ldr	r1, [r2, #24]
 260:Core/Inc/lcd_stm32f0.c ****         }
 366              		.loc 1 260 25 view .LVU93
 367 00f6 8023     		movs	r3, #128
 368 00f8 5B05     		lsls	r3, r3, #21
 369 00fa 0B43     		orrs	r3, r1
 370 00fc 9361     		str	r3, [r2, #24]
 371 00fe BEE7     		b	.L19
 372              	.L20:
 269:Core/Inc/lcd_stm32f0.c ****         }
 373              		.loc 1 269 10 is_stmt 1 view .LVU94
 269:Core/Inc/lcd_stm32f0.c ****         }
 374              		.loc 1 269 15 is_stmt 0 view .LVU95
 375 0100 074A     		ldr	r2, .L25+4
 376 0102 9169     		ldr	r1, [r2, #24]
 269:Core/Inc/lcd_stm32f0.c ****         }
 377              		.loc 1 269 22 view .LVU96
 378 0104 8023     		movs	r3, #128
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccaNFXgG.s 			page 15


 379 0106 9B04     		lsls	r3, r3, #18
 380 0108 0B43     		orrs	r3, r1
 381 010a 9361     		str	r3, [r2, #24]
 382 010c BFE7     		b	.L21
 383              	.LVL11:
 384              	.L22:
 278:Core/Inc/lcd_stm32f0.c ****         }
 385              		.loc 1 278 10 is_stmt 1 view .LVU97
 278:Core/Inc/lcd_stm32f0.c ****         }
 386              		.loc 1 278 15 is_stmt 0 view .LVU98
 387 010e 044A     		ldr	r2, .L25+4
 388 0110 9169     		ldr	r1, [r2, #24]
 278:Core/Inc/lcd_stm32f0.c ****         }
 389              		.loc 1 278 22 view .LVU99
 390 0112 8023     		movs	r3, #128
 391 0114 5B04     		lsls	r3, r3, #17
 392 0116 0B43     		orrs	r3, r1
 393 0118 9361     		str	r3, [r2, #24]
 394 011a C0E7     		b	.L23
 395              	.L26:
 396              		.align	2
 397              	.L25:
 398 011c 00080048 		.word	1207961600
 399 0120 00040048 		.word	1207960576
 400              		.cfi_endproc
 401              	.LFE42:
 403              		.section	.text.lcd_putstring,"ax",%progbits
 404              		.align	1
 405              		.global	lcd_putstring
 406              		.syntax unified
 407              		.code	16
 408              		.thumb_func
 410              	lcd_putstring:
 411              	.LVL12:
 412              	.LFB43:
 291:Core/Inc/lcd_stm32f0.c ****     unsigned char count = 0;
 413              		.loc 1 291 1 is_stmt 1 view -0
 414              		.cfi_startproc
 415              		@ args = 0, pretend = 0, frame = 0
 416              		@ frame_needed = 0, uses_anonymous_args = 0
 291:Core/Inc/lcd_stm32f0.c ****     unsigned char count = 0;
 417              		.loc 1 291 1 is_stmt 0 view .LVU101
 418 0000 70B5     		push	{r4, r5, r6, lr}
 419              	.LCFI3:
 420              		.cfi_def_cfa_offset 16
 421              		.cfi_offset 4, -16
 422              		.cfi_offset 5, -12
 423              		.cfi_offset 6, -8
 424              		.cfi_offset 14, -4
 425 0002 0500     		movs	r5, r0
 292:Core/Inc/lcd_stm32f0.c **** 
 426              		.loc 1 292 5 is_stmt 1 view .LVU102
 427              	.LVL13:
 294:Core/Inc/lcd_stm32f0.c ****     {
 428              		.loc 1 294 5 view .LVU103
 292:Core/Inc/lcd_stm32f0.c **** 
 429              		.loc 1 292 19 is_stmt 0 view .LVU104
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccaNFXgG.s 			page 16


 430 0004 0024     		movs	r4, #0
 294:Core/Inc/lcd_stm32f0.c ****     {
 431              		.loc 1 294 11 view .LVU105
 432 0006 03E0     		b	.L28
 433              	.LVL14:
 434              	.L29:
 296:Core/Inc/lcd_stm32f0.c **** 	    count++;
 435              		.loc 1 296 6 is_stmt 1 view .LVU106
 436 0008 FFF7FEFF 		bl	lcd_putchar
 437              	.LVL15:
 297:Core/Inc/lcd_stm32f0.c **** 	 }
 438              		.loc 1 297 6 view .LVU107
 297:Core/Inc/lcd_stm32f0.c **** 	 }
 439              		.loc 1 297 11 is_stmt 0 view .LVU108
 440 000c 0134     		adds	r4, r4, #1
 441              	.LVL16:
 297:Core/Inc/lcd_stm32f0.c **** 	 }
 442              		.loc 1 297 11 view .LVU109
 443 000e E4B2     		uxtb	r4, r4
 444              	.LVL17:
 445              	.L28:
 294:Core/Inc/lcd_stm32f0.c ****     {
 446              		.loc 1 294 12 is_stmt 1 view .LVU110
 294:Core/Inc/lcd_stm32f0.c ****     {
 447              		.loc 1 294 20 is_stmt 0 view .LVU111
 448 0010 285D     		ldrb	r0, [r5, r4]
 294:Core/Inc/lcd_stm32f0.c ****     {
 449              		.loc 1 294 12 view .LVU112
 450 0012 0028     		cmp	r0, #0
 451 0014 F8D1     		bne	.L29
 299:Core/Inc/lcd_stm32f0.c **** 
 452              		.loc 1 299 1 view .LVU113
 453              		@ sp needed
 454              	.LVL18:
 455              	.LVL19:
 299:Core/Inc/lcd_stm32f0.c **** 
 456              		.loc 1 299 1 view .LVU114
 457 0016 70BD     		pop	{r4, r5, r6, pc}
 458              		.cfi_endproc
 459              	.LFE43:
 461              		.section	.text.lcd_command,"ax",%progbits
 462              		.align	1
 463              		.global	lcd_command
 464              		.syntax unified
 465              		.code	16
 466              		.thumb_func
 468              	lcd_command:
 469              	.LVL20:
 470              	.LFB40:
  72:Core/Inc/lcd_stm32f0.c ****     GPIOC->BSRR |= LCD_RS_RESET;	// Register Select (RS)line low (data sent will now be read as com
 471              		.loc 1 72 1 is_stmt 1 view -0
 472              		.cfi_startproc
 473              		@ args = 0, pretend = 0, frame = 0
 474              		@ frame_needed = 0, uses_anonymous_args = 0
  72:Core/Inc/lcd_stm32f0.c ****     GPIOC->BSRR |= LCD_RS_RESET;	// Register Select (RS)line low (data sent will now be read as com
 475              		.loc 1 72 1 is_stmt 0 view .LVU116
 476 0000 10B5     		push	{r4, lr}
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccaNFXgG.s 			page 17


 477              	.LCFI4:
 478              		.cfi_def_cfa_offset 8
 479              		.cfi_offset 4, -8
 480              		.cfi_offset 14, -4
 481 0002 0400     		movs	r4, r0
  73:Core/Inc/lcd_stm32f0.c **** 
 482              		.loc 1 73 5 is_stmt 1 view .LVU117
  73:Core/Inc/lcd_stm32f0.c **** 
 483              		.loc 1 73 10 is_stmt 0 view .LVU118
 484 0004 474A     		ldr	r2, .L48
 485 0006 9169     		ldr	r1, [r2, #24]
  73:Core/Inc/lcd_stm32f0.c **** 
 486              		.loc 1 73 17 view .LVU119
 487 0008 8023     		movs	r3, #128
 488 000a DB05     		lsls	r3, r3, #23
 489 000c 0B43     		orrs	r3, r1
 490 000e 9361     		str	r3, [r2, #24]
  77:Core/Inc/lcd_stm32f0.c ****     {
 491              		.loc 1 77 5 is_stmt 1 view .LVU120
  77:Core/Inc/lcd_stm32f0.c ****     {
 492              		.loc 1 77 26 is_stmt 0 view .LVU121
 493 0010 43B2     		sxtb	r3, r0
  77:Core/Inc/lcd_stm32f0.c ****     {
 494              		.loc 1 77 8 view .LVU122
 495 0012 002B     		cmp	r3, #0
 496 0014 49DB     		blt	.L47
  83:Core/Inc/lcd_stm32f0.c ****     }
 497              		.loc 1 83 6 is_stmt 1 view .LVU123
  83:Core/Inc/lcd_stm32f0.c ****     }
 498              		.loc 1 83 11 is_stmt 0 view .LVU124
 499 0016 9022     		movs	r2, #144
 500 0018 D205     		lsls	r2, r2, #23
 501 001a 9169     		ldr	r1, [r2, #24]
  83:Core/Inc/lcd_stm32f0.c ****     }
 502              		.loc 1 83 18 view .LVU125
 503 001c 8023     		movs	r3, #128
 504 001e 1B06     		lsls	r3, r3, #24
 505 0020 0B43     		orrs	r3, r1
 506 0022 9361     		str	r3, [r2, #24]
 507              	.L32:
  86:Core/Inc/lcd_stm32f0.c ****     {
 508              		.loc 1 86 5 is_stmt 1 view .LVU126
  86:Core/Inc/lcd_stm32f0.c ****     {
 509              		.loc 1 86 8 is_stmt 0 view .LVU127
 510 0024 6306     		lsls	r3, r4, #25
 511 0026 48D5     		bpl	.L33
  88:Core/Inc/lcd_stm32f0.c ****     }
 512              		.loc 1 88 9 is_stmt 1 view .LVU128
  88:Core/Inc/lcd_stm32f0.c ****     }
 513              		.loc 1 88 14 is_stmt 0 view .LVU129
 514 0028 9022     		movs	r2, #144
 515 002a D205     		lsls	r2, r2, #23
 516 002c 9169     		ldr	r1, [r2, #24]
  88:Core/Inc/lcd_stm32f0.c ****     }
 517              		.loc 1 88 21 view .LVU130
 518 002e 8023     		movs	r3, #128
 519 0030 5B01     		lsls	r3, r3, #5
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccaNFXgG.s 			page 18


 520 0032 0B43     		orrs	r3, r1
 521 0034 9361     		str	r3, [r2, #24]
 522              	.L34:
  95:Core/Inc/lcd_stm32f0.c ****     {
 523              		.loc 1 95 5 is_stmt 1 view .LVU131
  95:Core/Inc/lcd_stm32f0.c ****     {
 524              		.loc 1 95 8 is_stmt 0 view .LVU132
 525 0036 A306     		lsls	r3, r4, #26
 526 0038 47D5     		bpl	.L35
  97:Core/Inc/lcd_stm32f0.c ****     }
 527              		.loc 1 97 6 is_stmt 1 view .LVU133
  97:Core/Inc/lcd_stm32f0.c ****     }
 528              		.loc 1 97 11 is_stmt 0 view .LVU134
 529 003a 3B4A     		ldr	r2, .L48+4
 530 003c 9169     		ldr	r1, [r2, #24]
  97:Core/Inc/lcd_stm32f0.c ****     }
 531              		.loc 1 97 18 view .LVU135
 532 003e 8023     		movs	r3, #128
 533 0040 9B00     		lsls	r3, r3, #2
 534 0042 0B43     		orrs	r3, r1
 535 0044 9361     		str	r3, [r2, #24]
 536              	.L36:
 104:Core/Inc/lcd_stm32f0.c ****     {
 537              		.loc 1 104 5 is_stmt 1 view .LVU136
 104:Core/Inc/lcd_stm32f0.c ****     {
 538              		.loc 1 104 8 is_stmt 0 view .LVU137
 539 0046 E306     		lsls	r3, r4, #27
 540 0048 46D5     		bpl	.L37
 106:Core/Inc/lcd_stm32f0.c ****     }
 541              		.loc 1 106 6 is_stmt 1 view .LVU138
 106:Core/Inc/lcd_stm32f0.c ****     }
 542              		.loc 1 106 11 is_stmt 0 view .LVU139
 543 004a 374A     		ldr	r2, .L48+4
 544 004c 9169     		ldr	r1, [r2, #24]
 106:Core/Inc/lcd_stm32f0.c ****     }
 545              		.loc 1 106 18 view .LVU140
 546 004e 8023     		movs	r3, #128
 547 0050 5B00     		lsls	r3, r3, #1
 548 0052 0B43     		orrs	r3, r1
 549 0054 9361     		str	r3, [r2, #24]
 550              	.L38:
 113:Core/Inc/lcd_stm32f0.c **** 
 551              		.loc 1 113 5 is_stmt 1 view .LVU141
 552 0056 FFF7FEFF 		bl	pulse_strobe
 553              	.LVL21:
 116:Core/Inc/lcd_stm32f0.c ****     {
 554              		.loc 1 116 5 view .LVU142
 116:Core/Inc/lcd_stm32f0.c ****     {
 555              		.loc 1 116 8 is_stmt 0 view .LVU143
 556 005a 2307     		lsls	r3, r4, #28
 557 005c 43D5     		bpl	.L39
 118:Core/Inc/lcd_stm32f0.c ****     }
 558              		.loc 1 118 6 is_stmt 1 view .LVU144
 118:Core/Inc/lcd_stm32f0.c ****     }
 559              		.loc 1 118 11 is_stmt 0 view .LVU145
 560 005e 9022     		movs	r2, #144
 561 0060 D205     		lsls	r2, r2, #23
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccaNFXgG.s 			page 19


 562 0062 9169     		ldr	r1, [r2, #24]
 118:Core/Inc/lcd_stm32f0.c ****     }
 563              		.loc 1 118 18 view .LVU146
 564 0064 8023     		movs	r3, #128
 565 0066 1B02     		lsls	r3, r3, #8
 566 0068 0B43     		orrs	r3, r1
 567 006a 9361     		str	r3, [r2, #24]
 568              	.L40:
 125:Core/Inc/lcd_stm32f0.c ****     {
 569              		.loc 1 125 5 is_stmt 1 view .LVU147
 125:Core/Inc/lcd_stm32f0.c ****     {
 570              		.loc 1 125 8 is_stmt 0 view .LVU148
 571 006c 6307     		lsls	r3, r4, #29
 572 006e 42D5     		bpl	.L41
 127:Core/Inc/lcd_stm32f0.c ****     }
 573              		.loc 1 127 9 is_stmt 1 view .LVU149
 127:Core/Inc/lcd_stm32f0.c ****     }
 574              		.loc 1 127 14 is_stmt 0 view .LVU150
 575 0070 9022     		movs	r2, #144
 576 0072 D205     		lsls	r2, r2, #23
 577 0074 9169     		ldr	r1, [r2, #24]
 127:Core/Inc/lcd_stm32f0.c ****     }
 578              		.loc 1 127 21 view .LVU151
 579 0076 8023     		movs	r3, #128
 580 0078 5B01     		lsls	r3, r3, #5
 581 007a 0B43     		orrs	r3, r1
 582 007c 9361     		str	r3, [r2, #24]
 583              	.L42:
 134:Core/Inc/lcd_stm32f0.c ****     {
 584              		.loc 1 134 5 is_stmt 1 view .LVU152
 134:Core/Inc/lcd_stm32f0.c ****     {
 585              		.loc 1 134 8 is_stmt 0 view .LVU153
 586 007e A307     		lsls	r3, r4, #30
 587 0080 41D5     		bpl	.L43
 136:Core/Inc/lcd_stm32f0.c ****     }
 588              		.loc 1 136 6 is_stmt 1 view .LVU154
 136:Core/Inc/lcd_stm32f0.c ****     }
 589              		.loc 1 136 11 is_stmt 0 view .LVU155
 590 0082 294A     		ldr	r2, .L48+4
 591 0084 9169     		ldr	r1, [r2, #24]
 136:Core/Inc/lcd_stm32f0.c ****     }
 592              		.loc 1 136 18 view .LVU156
 593 0086 8023     		movs	r3, #128
 594 0088 9B00     		lsls	r3, r3, #2
 595 008a 0B43     		orrs	r3, r1
 596 008c 9361     		str	r3, [r2, #24]
 597              	.L44:
 143:Core/Inc/lcd_stm32f0.c ****     {
 598              		.loc 1 143 5 is_stmt 1 view .LVU157
 143:Core/Inc/lcd_stm32f0.c ****     {
 599              		.loc 1 143 8 is_stmt 0 view .LVU158
 600 008e E407     		lsls	r4, r4, #31
 601 0090 40D5     		bpl	.L45
 602              	.LVL22:
 145:Core/Inc/lcd_stm32f0.c ****     }
 603              		.loc 1 145 6 is_stmt 1 view .LVU159
 145:Core/Inc/lcd_stm32f0.c ****     }
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccaNFXgG.s 			page 20


 604              		.loc 1 145 11 is_stmt 0 view .LVU160
 605 0092 254A     		ldr	r2, .L48+4
 606 0094 9169     		ldr	r1, [r2, #24]
 145:Core/Inc/lcd_stm32f0.c ****     }
 607              		.loc 1 145 18 view .LVU161
 608 0096 8023     		movs	r3, #128
 609 0098 5B00     		lsls	r3, r3, #1
 610 009a 0B43     		orrs	r3, r1
 611 009c 9361     		str	r3, [r2, #24]
 612              	.L46:
 152:Core/Inc/lcd_stm32f0.c ****     delay(3000);
 613              		.loc 1 152 5 is_stmt 1 view .LVU162
 614 009e FFF7FEFF 		bl	pulse_strobe
 615              	.LVL23:
 153:Core/Inc/lcd_stm32f0.c **** }
 616              		.loc 1 153 5 view .LVU163
 617 00a2 2248     		ldr	r0, .L48+8
 618 00a4 FFF7FEFF 		bl	delay
 619              	.LVL24:
 154:Core/Inc/lcd_stm32f0.c **** 
 620              		.loc 1 154 1 is_stmt 0 view .LVU164
 621              		@ sp needed
 622 00a8 10BD     		pop	{r4, pc}
 623              	.LVL25:
 624              	.L47:
  79:Core/Inc/lcd_stm32f0.c ****     }
 625              		.loc 1 79 6 is_stmt 1 view .LVU165
  79:Core/Inc/lcd_stm32f0.c ****     }
 626              		.loc 1 79 11 is_stmt 0 view .LVU166
 627 00aa 9022     		movs	r2, #144
 628 00ac D205     		lsls	r2, r2, #23
 629 00ae 9169     		ldr	r1, [r2, #24]
  79:Core/Inc/lcd_stm32f0.c ****     }
 630              		.loc 1 79 18 view .LVU167
 631 00b0 8023     		movs	r3, #128
 632 00b2 1B02     		lsls	r3, r3, #8
 633 00b4 0B43     		orrs	r3, r1
 634 00b6 9361     		str	r3, [r2, #24]
 635 00b8 B4E7     		b	.L32
 636              	.L33:
  92:Core/Inc/lcd_stm32f0.c ****     }
 637              		.loc 1 92 9 is_stmt 1 view .LVU168
  92:Core/Inc/lcd_stm32f0.c ****     }
 638              		.loc 1 92 14 is_stmt 0 view .LVU169
 639 00ba 9022     		movs	r2, #144
 640 00bc D205     		lsls	r2, r2, #23
 641 00be 9169     		ldr	r1, [r2, #24]
  92:Core/Inc/lcd_stm32f0.c ****     }
 642              		.loc 1 92 21 view .LVU170
 643 00c0 8023     		movs	r3, #128
 644 00c2 5B05     		lsls	r3, r3, #21
 645 00c4 0B43     		orrs	r3, r1
 646 00c6 9361     		str	r3, [r2, #24]
 647 00c8 B5E7     		b	.L34
 648              	.L35:
 101:Core/Inc/lcd_stm32f0.c ****     }
 649              		.loc 1 101 6 is_stmt 1 view .LVU171
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccaNFXgG.s 			page 21


 101:Core/Inc/lcd_stm32f0.c ****     }
 650              		.loc 1 101 11 is_stmt 0 view .LVU172
 651 00ca 174A     		ldr	r2, .L48+4
 652 00cc 9169     		ldr	r1, [r2, #24]
 101:Core/Inc/lcd_stm32f0.c ****     }
 653              		.loc 1 101 18 view .LVU173
 654 00ce 8023     		movs	r3, #128
 655 00d0 9B04     		lsls	r3, r3, #18
 656 00d2 0B43     		orrs	r3, r1
 657 00d4 9361     		str	r3, [r2, #24]
 658 00d6 B6E7     		b	.L36
 659              	.L37:
 110:Core/Inc/lcd_stm32f0.c ****     }
 660              		.loc 1 110 6 is_stmt 1 view .LVU174
 110:Core/Inc/lcd_stm32f0.c ****     }
 661              		.loc 1 110 11 is_stmt 0 view .LVU175
 662 00d8 134A     		ldr	r2, .L48+4
 663 00da 9169     		ldr	r1, [r2, #24]
 110:Core/Inc/lcd_stm32f0.c ****     }
 664              		.loc 1 110 18 view .LVU176
 665 00dc 8023     		movs	r3, #128
 666 00de 5B04     		lsls	r3, r3, #17
 667 00e0 0B43     		orrs	r3, r1
 668 00e2 9361     		str	r3, [r2, #24]
 669 00e4 B7E7     		b	.L38
 670              	.LVL26:
 671              	.L39:
 122:Core/Inc/lcd_stm32f0.c ****     }
 672              		.loc 1 122 6 is_stmt 1 view .LVU177
 122:Core/Inc/lcd_stm32f0.c ****     }
 673              		.loc 1 122 11 is_stmt 0 view .LVU178
 674 00e6 9022     		movs	r2, #144
 675 00e8 D205     		lsls	r2, r2, #23
 676 00ea 9169     		ldr	r1, [r2, #24]
 122:Core/Inc/lcd_stm32f0.c ****     }
 677              		.loc 1 122 18 view .LVU179
 678 00ec 8023     		movs	r3, #128
 679 00ee 1B06     		lsls	r3, r3, #24
 680 00f0 0B43     		orrs	r3, r1
 681 00f2 9361     		str	r3, [r2, #24]
 682 00f4 BAE7     		b	.L40
 683              	.L41:
 131:Core/Inc/lcd_stm32f0.c ****     }
 684              		.loc 1 131 9 is_stmt 1 view .LVU180
 131:Core/Inc/lcd_stm32f0.c ****     }
 685              		.loc 1 131 14 is_stmt 0 view .LVU181
 686 00f6 9022     		movs	r2, #144
 687 00f8 D205     		lsls	r2, r2, #23
 688 00fa 9169     		ldr	r1, [r2, #24]
 131:Core/Inc/lcd_stm32f0.c ****     }
 689              		.loc 1 131 21 view .LVU182
 690 00fc 8023     		movs	r3, #128
 691 00fe 5B05     		lsls	r3, r3, #21
 692 0100 0B43     		orrs	r3, r1
 693 0102 9361     		str	r3, [r2, #24]
 694 0104 BBE7     		b	.L42
 695              	.L43:
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccaNFXgG.s 			page 22


 140:Core/Inc/lcd_stm32f0.c ****     }
 696              		.loc 1 140 6 is_stmt 1 view .LVU183
 140:Core/Inc/lcd_stm32f0.c ****     }
 697              		.loc 1 140 11 is_stmt 0 view .LVU184
 698 0106 084A     		ldr	r2, .L48+4
 699 0108 9169     		ldr	r1, [r2, #24]
 140:Core/Inc/lcd_stm32f0.c ****     }
 700              		.loc 1 140 18 view .LVU185
 701 010a 8023     		movs	r3, #128
 702 010c 9B04     		lsls	r3, r3, #18
 703 010e 0B43     		orrs	r3, r1
 704 0110 9361     		str	r3, [r2, #24]
 705 0112 BCE7     		b	.L44
 706              	.LVL27:
 707              	.L45:
 149:Core/Inc/lcd_stm32f0.c ****     }
 708              		.loc 1 149 6 is_stmt 1 view .LVU186
 149:Core/Inc/lcd_stm32f0.c ****     }
 709              		.loc 1 149 11 is_stmt 0 view .LVU187
 710 0114 044A     		ldr	r2, .L48+4
 711 0116 9169     		ldr	r1, [r2, #24]
 149:Core/Inc/lcd_stm32f0.c ****     }
 712              		.loc 1 149 18 view .LVU188
 713 0118 8023     		movs	r3, #128
 714 011a 5B04     		lsls	r3, r3, #17
 715 011c 0B43     		orrs	r3, r1
 716 011e 9361     		str	r3, [r2, #24]
 717 0120 BDE7     		b	.L46
 718              	.L49:
 719 0122 C046     		.align	2
 720              	.L48:
 721 0124 00080048 		.word	1207961600
 722 0128 00040048 		.word	1207960576
 723 012c B80B0000 		.word	3000
 724              		.cfi_endproc
 725              	.LFE40:
 727              		.section	.text.init_LCD,"ax",%progbits
 728              		.align	1
 729              		.global	init_LCD
 730              		.syntax unified
 731              		.code	16
 732              		.thumb_func
 734              	init_LCD:
 735              	.LFB41:
 168:Core/Inc/lcd_stm32f0.c ****     RCC->AHBENR |= RCC_AHBENR_GPIOAEN;	// Connect clocks to GPIO A, B and C
 736              		.loc 1 168 1 is_stmt 1 view -0
 737              		.cfi_startproc
 738              		@ args = 0, pretend = 0, frame = 0
 739              		@ frame_needed = 0, uses_anonymous_args = 0
 740 0000 10B5     		push	{r4, lr}
 741              	.LCFI5:
 742              		.cfi_def_cfa_offset 8
 743              		.cfi_offset 4, -8
 744              		.cfi_offset 14, -4
 169:Core/Inc/lcd_stm32f0.c ****     RCC->AHBENR |= RCC_AHBENR_GPIOBEN;
 745              		.loc 1 169 5 view .LVU190
 169:Core/Inc/lcd_stm32f0.c ****     RCC->AHBENR |= RCC_AHBENR_GPIOBEN;
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccaNFXgG.s 			page 23


 746              		.loc 1 169 8 is_stmt 0 view .LVU191
 747 0002 1B4B     		ldr	r3, .L51
 748 0004 5969     		ldr	r1, [r3, #20]
 169:Core/Inc/lcd_stm32f0.c ****     RCC->AHBENR |= RCC_AHBENR_GPIOBEN;
 749              		.loc 1 169 17 view .LVU192
 750 0006 8022     		movs	r2, #128
 751 0008 9202     		lsls	r2, r2, #10
 752 000a 0A43     		orrs	r2, r1
 753 000c 5A61     		str	r2, [r3, #20]
 170:Core/Inc/lcd_stm32f0.c ****     RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 754              		.loc 1 170 5 is_stmt 1 view .LVU193
 170:Core/Inc/lcd_stm32f0.c ****     RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 755              		.loc 1 170 8 is_stmt 0 view .LVU194
 756 000e 5969     		ldr	r1, [r3, #20]
 170:Core/Inc/lcd_stm32f0.c ****     RCC->AHBENR |= RCC_AHBENR_GPIOCEN;
 757              		.loc 1 170 17 view .LVU195
 758 0010 8022     		movs	r2, #128
 759 0012 D202     		lsls	r2, r2, #11
 760 0014 0A43     		orrs	r2, r1
 761 0016 5A61     		str	r2, [r3, #20]
 171:Core/Inc/lcd_stm32f0.c **** 
 762              		.loc 1 171 5 is_stmt 1 view .LVU196
 171:Core/Inc/lcd_stm32f0.c **** 
 763              		.loc 1 171 8 is_stmt 0 view .LVU197
 764 0018 5969     		ldr	r1, [r3, #20]
 171:Core/Inc/lcd_stm32f0.c **** 
 765              		.loc 1 171 17 view .LVU198
 766 001a 8022     		movs	r2, #128
 767 001c 1203     		lsls	r2, r2, #12
 768 001e 0A43     		orrs	r2, r1
 769 0020 5A61     		str	r2, [r3, #20]
 173:Core/Inc/lcd_stm32f0.c ****     GPIOB->MODER |= (GPIO_MODER_MODER8_0|GPIO_MODER_MODER9_0);   // D4 and D5
 770              		.loc 1 173 5 is_stmt 1 view .LVU199
 173:Core/Inc/lcd_stm32f0.c ****     GPIOB->MODER |= (GPIO_MODER_MODER8_0|GPIO_MODER_MODER9_0);   // D4 and D5
 771              		.loc 1 173 10 is_stmt 0 view .LVU200
 772 0022 9022     		movs	r2, #144
 773 0024 D205     		lsls	r2, r2, #23
 774 0026 1168     		ldr	r1, [r2]
 173:Core/Inc/lcd_stm32f0.c ****     GPIOB->MODER |= (GPIO_MODER_MODER8_0|GPIO_MODER_MODER9_0);   // D4 and D5
 775              		.loc 1 173 18 view .LVU201
 776 0028 8223     		movs	r3, #130
 777 002a DB05     		lsls	r3, r3, #23
 778 002c 0B43     		orrs	r3, r1
 779 002e 1360     		str	r3, [r2]
 174:Core/Inc/lcd_stm32f0.c ****     GPIOC->MODER |= (GPIO_MODER_MODER14_0|GPIO_MODER_MODER15_0); // RS and EN
 780              		.loc 1 174 5 is_stmt 1 view .LVU202
 174:Core/Inc/lcd_stm32f0.c ****     GPIOC->MODER |= (GPIO_MODER_MODER14_0|GPIO_MODER_MODER15_0); // RS and EN
 781              		.loc 1 174 10 is_stmt 0 view .LVU203
 782 0030 104A     		ldr	r2, .L51+4
 783 0032 1168     		ldr	r1, [r2]
 174:Core/Inc/lcd_stm32f0.c ****     GPIOC->MODER |= (GPIO_MODER_MODER14_0|GPIO_MODER_MODER15_0); // RS and EN
 784              		.loc 1 174 18 view .LVU204
 785 0034 A023     		movs	r3, #160
 786 0036 DB02     		lsls	r3, r3, #11
 787 0038 0B43     		orrs	r3, r1
 788 003a 1360     		str	r3, [r2]
 175:Core/Inc/lcd_stm32f0.c **** 
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccaNFXgG.s 			page 24


 789              		.loc 1 175 5 is_stmt 1 view .LVU205
 175:Core/Inc/lcd_stm32f0.c **** 
 790              		.loc 1 175 10 is_stmt 0 view .LVU206
 791 003c 0E4A     		ldr	r2, .L51+8
 792 003e 1168     		ldr	r1, [r2]
 175:Core/Inc/lcd_stm32f0.c **** 
 793              		.loc 1 175 18 view .LVU207
 794 0040 A023     		movs	r3, #160
 795 0042 DB05     		lsls	r3, r3, #23
 796 0044 0B43     		orrs	r3, r1
 797 0046 1360     		str	r3, [r2]
 177:Core/Inc/lcd_stm32f0.c **** 
 798              		.loc 1 177 5 is_stmt 1 view .LVU208
 799 0048 0C48     		ldr	r0, .L51+12
 800 004a FFF7FEFF 		bl	delay
 801              	.LVL28:
 179:Core/Inc/lcd_stm32f0.c ****     lcd_command(FOURBIT_MODE);		// Set LCD into 4 bit mode
 802              		.loc 1 179 5 view .LVU209
 803 004e 3320     		movs	r0, #51
 804 0050 FFF7FEFF 		bl	lcd_command
 805              	.LVL29:
 180:Core/Inc/lcd_stm32f0.c ****     lcd_command(DISPLAY_ON);		// Turn display on and set up cursor
 806              		.loc 1 180 5 view .LVU210
 807 0054 3220     		movs	r0, #50
 808 0056 FFF7FEFF 		bl	lcd_command
 809              	.LVL30:
 181:Core/Inc/lcd_stm32f0.c ****     lcd_command(TWOLINE_MODE);		// Set up 2 lines and character size
 810              		.loc 1 181 5 view .LVU211
 811 005a 0C20     		movs	r0, #12
 812 005c FFF7FEFF 		bl	lcd_command
 813              	.LVL31:
 182:Core/Inc/lcd_stm32f0.c ****     lcd_command(CLEAR);			// Clear display
 814              		.loc 1 182 5 view .LVU212
 815 0060 2820     		movs	r0, #40
 816 0062 FFF7FEFF 		bl	lcd_command
 817              	.LVL32:
 183:Core/Inc/lcd_stm32f0.c **** }
 818              		.loc 1 183 5 view .LVU213
 819 0066 0120     		movs	r0, #1
 820 0068 FFF7FEFF 		bl	lcd_command
 821              	.LVL33:
 184:Core/Inc/lcd_stm32f0.c **** 
 822              		.loc 1 184 1 is_stmt 0 view .LVU214
 823              		@ sp needed
 824 006c 10BD     		pop	{r4, pc}
 825              	.L52:
 826 006e C046     		.align	2
 827              	.L51:
 828 0070 00100240 		.word	1073876992
 829 0074 00040048 		.word	1207960576
 830 0078 00080048 		.word	1207961600
 831 007c 30750000 		.word	30000
 832              		.cfi_endproc
 833              	.LFE41:
 835              		.text
 836              	.Letext0:
 837              		.file 2 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccaNFXgG.s 			page 25


 838              		.file 3 "C:\\ST\\STM32CubeIDE_1.19.0\\STM32CubeIDE\\plugins\\com.st.stm32cube.ide.mcu.externaltool
 839              		.file 4 "Drivers/CMSIS/Device/ST/STM32F0xx/Include/stm32f051x8.h"
ARM GAS  C:\Users\einom\AppData\Local\Temp\ccaNFXgG.s 			page 26


DEFINED SYMBOLS
                            *ABS*:00000000 lcd_stm32f0.c
C:\Users\einom\AppData\Local\Temp\ccaNFXgG.s:19     .text.delay:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccaNFXgG.s:25     .text.delay:00000000 delay
C:\Users\einom\AppData\Local\Temp\ccaNFXgG.s:78     .text.pulse_strobe:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccaNFXgG.s:84     .text.pulse_strobe:00000000 pulse_strobe
C:\Users\einom\AppData\Local\Temp\ccaNFXgG.s:138    .text.pulse_strobe:00000034 $d
C:\Users\einom\AppData\Local\Temp\ccaNFXgG.s:143    .text.lcd_putchar:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccaNFXgG.s:149    .text.lcd_putchar:00000000 lcd_putchar
C:\Users\einom\AppData\Local\Temp\ccaNFXgG.s:398    .text.lcd_putchar:0000011c $d
C:\Users\einom\AppData\Local\Temp\ccaNFXgG.s:404    .text.lcd_putstring:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccaNFXgG.s:410    .text.lcd_putstring:00000000 lcd_putstring
C:\Users\einom\AppData\Local\Temp\ccaNFXgG.s:462    .text.lcd_command:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccaNFXgG.s:468    .text.lcd_command:00000000 lcd_command
C:\Users\einom\AppData\Local\Temp\ccaNFXgG.s:721    .text.lcd_command:00000124 $d
C:\Users\einom\AppData\Local\Temp\ccaNFXgG.s:728    .text.init_LCD:00000000 $t
C:\Users\einom\AppData\Local\Temp\ccaNFXgG.s:734    .text.init_LCD:00000000 init_LCD
C:\Users\einom\AppData\Local\Temp\ccaNFXgG.s:828    .text.init_LCD:00000070 $d

NO UNDEFINED SYMBOLS
